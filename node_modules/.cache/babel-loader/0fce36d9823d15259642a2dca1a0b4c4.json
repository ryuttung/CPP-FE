{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimso\\\\Desktop\\\\latest_FE\\\\latest_FE\\\\src\\\\JoinPage\\\\Join.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Join.css';\nimport LoginModal from '../LoginPage/LoginModal';\nimport Policy from './Policy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Join() {\n  _s();\n\n  //약관모달창 상태관리\n  const [openPolicyModal, setopenPolicyModal] = useState(false);\n\n  const policyModal = () => {\n    setopenPolicyModal(true);\n  };\n\n  useEffect(() => {\n    policyModal();\n\n    /*#__PURE__*/\n    _jsxDEV(Link, {\n      to: \"/policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this);\n  }, []); //로그인 모달\n\n  const [openLoginModal, setOpenLoginModal] = useState(false);\n  const [joinInit, setJoinInit] = useState({\n    registerNickname: '',\n    registerEmail: '',\n    registerPassword: ''\n  }); //input창 아래 error메세지\n\n  const [joinError, setJoinError] = useState({}); //유효성 감사\n\n  const [isNickname, setIsNickname] = useState(false);\n  const [isEmail, setIsEmail] = useState(false); //const [isPassword, setIsPassword] = useState(false);\n\n  const joinBtn = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: 'http://api.cpp.co.kr:3300/users',\n        data: {\n          nickname: joinInit.registerNickname,\n          email: joinInit.registerEmail,\n          password: joinInit.registerPassword\n        },\n        withCredentials: true\n      });\n      console.log(res);\n\n      if (res.status === 200) {\n        window.alert('회원가입이 완료되었습니다! 로그인 해주세요 :p');\n        window.open('/', '_self');\n      }\n    } catch (err) {\n      if ((setIsEmail || setIsNickname) === false) {\n        window.alert('중복확인을 해주세요!');\n      } else if (err.response.status === 400) {\n        window.alert('회원가입이 정상적으로 되지 않았습니다. 입력하신 정보를 확인해주세요 :(');\n      }\n    }\n  }; //닉네임\n\n\n  const nicknameCheck = async e => {\n    e.preventDefault();\n    const nicknameRegEx = /^[가-힣A-Za-z0-9]{2,20}$/; //영문자, 숫자만 가능\n\n    console.log(joinInit.registerNickname);\n\n    if (joinInit.registerNickname.length > 0 && !nicknameRegEx.test(joinInit.registerNickname)) {\n      const newJoinError = { ...joinError,\n        registerNickname: '입력하신 정보를 확인해주세요.'\n      };\n      setJoinError(newJoinError);\n      setIsNickname(false);\n      return;\n    }\n\n    try {\n      const res = await axios({\n        method: 'get',\n        url: `http://api.cpp.co.kr:3300/users/nickname?nickname=${joinInit.registerNickname}`,\n        withCredentials: true\n      });\n\n      if (res.status === 200) {\n        const newJoinError = { ...joinError,\n          registerNickname: '사용할 수 있는 닉네임입니다.'\n        };\n        setJoinError(newJoinError);\n        setIsNickname(true);\n      }\n    } catch (err) {\n      console.log(err);\n\n      if (err.response.status === 400) {\n        const newJoinError = { ...joinError,\n          registerNickname: err.response.data.message\n        };\n        setJoinError(newJoinError);\n        setIsNickname(false);\n      }\n    }\n  }; //이메일 + 중복검사\n\n\n  const emailCheck = async e => {\n    e.preventDefault();\n    const emailRegEx = /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/i;\n\n    if (joinInit.registerEmail.length > 0 && !emailRegEx.test(joinInit.registerEmail)) {\n      const newJoinError = { ...joinError,\n        registerEmail: '입력하신 정보를 확인해주세요.'\n      };\n      setJoinError(newJoinError);\n      setIsEmail(false);\n      return;\n    }\n\n    try {\n      const res = await axios({\n        method: 'get',\n        url: `http://api.cpp.co.kr:3300/users/email?email=${joinInit.registerEmail}`,\n        withCredentials: true\n      });\n      console.log(res);\n\n      if (res.status === 200) {\n        const newJoinError = { ...joinError,\n          registerEmail: '사용할 수 있는 이메일입니다.'\n        };\n        setJoinError(newJoinError);\n        setIsEmail(true);\n      }\n    } catch (err) {\n      console.log(err);\n\n      if (err.response.status === 400) {\n        const newJoinError = { ...joinError,\n          registerEmail: err.response.data.message\n        };\n        setJoinError(newJoinError);\n        setIsEmail(false);\n      }\n    }\n  }; //비밀번호 정규식\n\n\n  const passwordRegEx = /^[A-Za-z0-9]{8,20}$/; //비밀번호\n\n  if (joinInit.registerPassword.length > 0 && !passwordRegEx.test(joinInit.registerPassword)) {\n    joinError.registerPassword = '입력하신 정보를 확인해주세요.';\n  } else if (joinInit.registerPassword.length > 0 && passwordRegEx.test(joinInit.registerPassword) === true) {\n    joinError.registerPassword = 'ok!';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [openPolicyModal && /*#__PURE__*/_jsxDEV(Policy, {\n      closePolicyModal: setopenPolicyModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joinHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"joinText\",\n          children: \"\\uAC00\\uC785\\uC744 \\uD1B5\\uD574 \\uB354 \\uB098\\uC740 \\uC11C\\uBE44\\uC2A4\\uB97C \\uB9CC\\uB098\\uBCF4\\uC138\\uC694! :p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"joinForm\",\n        id: \"joinForm\",\n        onSubmit: joinBtn,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"joinBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uB2C9\\uB124\\uC784\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"joinNickname\",\n              type: \"text\",\n              name: \"nickname\",\n              placeholder: \"2\\uC790 \\uC774\\uC0C1 20\\uC790 \\uC774\\uB0B4\\uB85C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n              value: joinInit.registerNickname,\n              onChange: e => setJoinInit({ ...joinInit,\n                registerNickname: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 8\n            }, this), joinError.registerNickname && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"error\",\n              children: joinError.registerNickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"checkButton\",\n              onClick: nicknameCheck,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"joinEmail\",\n              type: \"text\",\n              name: \"Email\",\n              placeholder: \"cpp@cpp.com\",\n              value: joinInit.registerEmail,\n              onChange: e => setJoinInit({ ...joinInit,\n                registerEmail: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 8\n            }, this), joinError.registerEmail && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"error\",\n              children: joinError.registerEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"checkButton\",\n              onClick: emailCheck,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"joinPW\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"8\\uC790 \\uC774\\uC0C1 20\\uC790 \\uC774\\uB0B4\\uB85C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n              value: joinInit.registerPassword,\n              onChange: e => setJoinInit({ ...joinInit,\n                registerPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 8\n            }, this), joinError.registerPassword && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"error\",\n              children: joinError.registerPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joinBtnPlace\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"joinButton\",\n          type: \"submit\",\n          onClick: joinBtn,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notJoin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774\\uBBF8 \\uD68C\\uC6D0\\uC774\\uC2E0\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"goLogin\",\n          onClick: () => {\n            setOpenLoginModal(true);\n          },\n          children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 6\n        }, this), openLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n          closeLoginModal: setOpenLoginModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Join, \"2higTB5vGlm+Ir/cAc/D0y2btrY=\");\n\n_c = Join;\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","LoginModal","Policy","Join","openPolicyModal","setopenPolicyModal","policyModal","openLoginModal","setOpenLoginModal","joinInit","setJoinInit","registerNickname","registerEmail","registerPassword","joinError","setJoinError","isNickname","setIsNickname","isEmail","setIsEmail","joinBtn","e","preventDefault","res","method","url","data","nickname","email","password","withCredentials","console","log","status","window","alert","open","err","response","nicknameCheck","nicknameRegEx","length","test","newJoinError","message","emailCheck","emailRegEx","passwordRegEx","target","value"],"sources":["C:/Users/kimso/Desktop/latest_FE/latest_FE/src/JoinPage/Join.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Join.css';\r\nimport LoginModal from '../LoginPage/LoginModal';\r\nimport Policy from './Policy';\r\nfunction Join() {\r\n\t//약관모달창 상태관리\r\n\tconst [openPolicyModal, setopenPolicyModal] = useState(false);\r\n\tconst policyModal = () => {\r\n\t\tsetopenPolicyModal(true);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tpolicyModal();\r\n\t\t<Link to='/policy' />;\r\n\t}, []);\r\n\t//로그인 모달\r\n\tconst [openLoginModal, setOpenLoginModal] = useState(false);\r\n\tconst [joinInit, setJoinInit] = useState({\r\n\t\tregisterNickname: '',\r\n\t\tregisterEmail: '',\r\n\t\tregisterPassword: '',\r\n\t});\r\n\t//input창 아래 error메세지\r\n\tconst [joinError, setJoinError] = useState({});\r\n\t//유효성 감사\r\n\tconst [isNickname, setIsNickname] = useState(false);\r\n\tconst [isEmail, setIsEmail] = useState(false);\r\n\t//const [isPassword, setIsPassword] = useState(false);\r\n\tconst joinBtn = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst res = await axios({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\turl: 'http://api.cpp.co.kr:3300/users',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tnickname: joinInit.registerNickname,\r\n\t\t\t\t\temail: joinInit.registerEmail,\r\n\t\t\t\t\tpassword: joinInit.registerPassword,\r\n\t\t\t\t},\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t});\r\n\t\t\tconsole.log(res);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\twindow.alert('회원가입이 완료되었습니다! 로그인 해주세요 :p');\r\n\t\t\t\twindow.open('/', '_self');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif ((setIsEmail || setIsNickname) === false) {\r\n\t\t\t\twindow.alert('중복확인을 해주세요!');\r\n\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\twindow.alert(\r\n\t\t\t\t\t'회원가입이 정상적으로 되지 않았습니다. 입력하신 정보를 확인해주세요 :('\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//닉네임\r\n\tconst nicknameCheck = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst nicknameRegEx = /^[가-힣A-Za-z0-9]{2,20}$/; //영문자, 숫자만 가능\r\n\t\tconsole.log(joinInit.registerNickname);\r\n\t\tif (\r\n\t\t\tjoinInit.registerNickname.length > 0 &&\r\n\t\t\t!nicknameRegEx.test(joinInit.registerNickname)\r\n\t\t) {\r\n\t\t\tconst newJoinError = {\r\n\t\t\t\t...joinError,\r\n\t\t\t\tregisterNickname: '입력하신 정보를 확인해주세요.',\r\n\t\t\t};\r\n\t\t\tsetJoinError(newJoinError);\r\n\t\t\tsetIsNickname(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst res = await axios({\r\n\t\t\t\tmethod: 'get',\r\n\t\t\t\turl: `http://api.cpp.co.kr:3300/users/nickname?nickname=${joinInit.registerNickname}`,\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newJoinError = {\r\n\t\t\t\t\t...joinError,\r\n\t\t\t\t\tregisterNickname: '사용할 수 있는 닉네임입니다.',\r\n\t\t\t\t};\r\n\t\t\t\tsetJoinError(newJoinError);\r\n\t\t\t\tsetIsNickname(true);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (err.response.status === 400) {\r\n\t\t\t\tconst newJoinError = {\r\n\t\t\t\t\t...joinError,\r\n\t\t\t\t\tregisterNickname: err.response.data.message,\r\n\t\t\t\t};\r\n\t\t\t\tsetJoinError(newJoinError);\r\n\t\t\t\tsetIsNickname(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//이메일 + 중복검사\r\n\tconst emailCheck = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst emailRegEx =\r\n\t\t\t/^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/i;\r\n\t\tif (\r\n\t\t\tjoinInit.registerEmail.length > 0 &&\r\n\t\t\t!emailRegEx.test(joinInit.registerEmail)\r\n\t\t) {\r\n\t\t\tconst newJoinError = {\r\n\t\t\t\t...joinError,\r\n\t\t\t\tregisterEmail: '입력하신 정보를 확인해주세요.',\r\n\t\t\t};\r\n\t\t\tsetJoinError(newJoinError);\r\n\t\t\tsetIsEmail(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst res = await axios({\r\n\t\t\t\tmethod: 'get',\r\n\t\t\t\turl: `http://api.cpp.co.kr:3300/users/email?email=${joinInit.registerEmail}`,\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t});\r\n\t\t\tconsole.log(res);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newJoinError = {\r\n\t\t\t\t\t...joinError,\r\n\t\t\t\t\tregisterEmail: '사용할 수 있는 이메일입니다.',\r\n\t\t\t\t};\r\n\t\t\t\tsetJoinError(newJoinError);\r\n\t\t\t\tsetIsEmail(true);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (err.response.status === 400) {\r\n\t\t\t\tconst newJoinError = {\r\n\t\t\t\t\t...joinError,\r\n\t\t\t\t\tregisterEmail: err.response.data.message,\r\n\t\t\t\t};\r\n\t\t\t\tsetJoinError(newJoinError);\r\n\t\t\t\tsetIsEmail(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//비밀번호 정규식\r\n\tconst passwordRegEx = /^[A-Za-z0-9]{8,20}$/;\r\n\t//비밀번호\r\n\tif (\r\n\t\tjoinInit.registerPassword.length > 0 &&\r\n\t\t!passwordRegEx.test(joinInit.registerPassword)\r\n\t) {\r\n\t\tjoinError.registerPassword = '입력하신 정보를 확인해주세요.';\r\n\t} else if (\r\n\t\tjoinInit.registerPassword.length > 0 &&\r\n\t\tpasswordRegEx.test(joinInit.registerPassword) === true\r\n\t) {\r\n\t\tjoinError.registerPassword = 'ok!';\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{openPolicyModal && (\r\n\t\t\t\t<Policy closePolicyModal={setopenPolicyModal} />\r\n\t\t\t)}\r\n\t\t\t<div className='joinContainer'>\r\n\t\t\t\t<div className='joinHeader'>\r\n\t\t\t\t\t<p>회원가입</p>\r\n\t\t\t\t\t<p className='joinText'>\r\n\t\t\t\t\t\t가입을 통해 더 나은 서비스를 만나보세요! :p\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className='joinForm' id='joinForm' onSubmit={joinBtn}>\r\n\t\t\t\t\t<div className='joinBody'>\r\n\t\t\t\t\t\t<div className='formControl'>\r\n\t\t\t\t\t\t\t<label>닉네임</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='joinNickname'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='nickname'\r\n\t\t\t\t\t\t\t\tplaceholder='2자 이상 20자 이내로 작성해주세요'\r\n\t\t\t\t\t\t\t\tvalue={joinInit.registerNickname}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetJoinInit({\r\n\t\t\t\t\t\t\t\t\t\t...joinInit,\r\n\t\t\t\t\t\t\t\t\t\tregisterNickname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{joinError.registerNickname && (\r\n\t\t\t\t\t\t\t\t<small className='error'>\r\n\t\t\t\t\t\t\t\t\t{joinError.registerNickname}\r\n\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='checkButton'\r\n\t\t\t\t\t\t\t\tonClick={nicknameCheck}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t중복확인\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='formControl'>\r\n\t\t\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='joinEmail'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='Email'\r\n\t\t\t\t\t\t\t\tplaceholder='cpp@cpp.com'\r\n\t\t\t\t\t\t\t\tvalue={joinInit.registerEmail}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetJoinInit({\r\n\t\t\t\t\t\t\t\t\t\t...joinInit,\r\n\t\t\t\t\t\t\t\t\t\tregisterEmail: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{joinError.registerEmail && (\r\n\t\t\t\t\t\t\t\t<small className='error'>\r\n\t\t\t\t\t\t\t\t\t{joinError.registerEmail}\r\n\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='checkButton'\r\n\t\t\t\t\t\t\t\tonClick={emailCheck}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t중복확인\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='formControl'>\r\n\t\t\t\t\t\t\t<label>비밀번호</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='joinPW'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tplaceholder='8자 이상 20자 이내로 작성해주세요'\r\n\t\t\t\t\t\t\t\tvalue={joinInit.registerPassword}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetJoinInit({\r\n\t\t\t\t\t\t\t\t\t\t...joinInit,\r\n\t\t\t\t\t\t\t\t\t\tregisterPassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{joinError.registerPassword && (\r\n\t\t\t\t\t\t\t\t<small className='error'>\r\n\t\t\t\t\t\t\t\t\t{joinError.registerPassword}\r\n\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className='joinBtnPlace'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='joinButton'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tonClick={joinBtn}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t가입하기\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='notJoin'>\r\n\t\t\t\t\t<p>이미 회원이신가요?</p>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tclassName='goLogin'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpenLoginModal(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t로그인 하러가기\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{openLoginModal && (\r\n\t\t\t\t\t\t<LoginModal closeLoginModal={setOpenLoginModal} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Join;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}