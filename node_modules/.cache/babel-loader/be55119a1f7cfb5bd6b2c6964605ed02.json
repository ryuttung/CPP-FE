{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimso\\\\Desktop\\\\latest_FE\\\\latest_FE\\\\src\\\\PostingPage\\\\PostingUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './PostingUpload.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostingUpload(_ref) {\n  _s();\n\n  let {\n    setAllState,\n    allState\n  } = _ref;\n  //첨부된 이미지 저장 state\n  const [showImages, setShowImages] = useState([]); // const formData = new FormData();\n\n  const postPostPhoto = async e => {\n    console.log('postPostPhoto:', e.target.files[0]);\n    const files = e.target.files;\n    const formData = new FormData(); // for (let i = 0; i < files.length; i++) {\n    //   formData.append('photo', showImages[i]);\n    //   console.log(showImages[i]);\n    // }\n\n    formData.append('photo', files[0]);\n    let photos = allState.photoURLs; //응답받은 photo url 배열로 담기\n\n    await axios({\n      method: 'POST',\n      url: 'http://api.cpp.co.kr:3300/posts/photo',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      withCredentials: true\n    }).then(res => {\n      photos.push(res.data.photoURL);\n      setAllState({ ...allState,\n        photoURLs: photos\n      });\n    }).catch(err => console.log(err));\n  };\n\n  console.log('photo', allState); // //이미지 업로드 수 10개로 제한 (이미지 상대 경로 저장)\n  // const handleAddImages = (e) => {\n  //   const imageLists = e.target.files;\n  //   console.log('imageList : ', imageLists);\n  //   let imageUrlLists = [...showImages];\n  //   for (let i = 0; i < imageLists.length; i++) {\n  //     const currentImageUrl = URL.createObjectURL(imageLists[i]);\n  //     imageUrlLists.push(currentImageUrl);\n  //   }\n  //   if (imageUrlLists.length > 10) {\n  //     imageUrlLists = imageUrlLists.slice(0, 10);\n  //   }\n  //   setShowImages(imageUrlLists);\n  // };\n  //이미지 업로드 수 10개로 제한 (이미지 상대 경로 저장)\n\n  const handleAddImages = e => {\n    const imageLists = e.target.files;\n    console.log('imageList : ', imageLists);\n    let imageUrlLists = [...showImages];\n\n    for (let i = 0; i < imageLists.length; i++) {\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\n      imageUrlLists.push(currentImageUrl);\n    }\n\n    if (imageUrlLists.length > 10) {\n      imageUrlLists = imageUrlLists.slice(0, 10);\n    }\n\n    setShowImages(imageUrlLists);\n  };\n\n  const inputImgBtn = useRef();\n\n  const onClickImgUpload = () => {\n    inputImgBtn.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postingUpload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadImgContainer\",\n      children: showImages.map((image, id) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"uploadImg\",\n        src: image,\n        alt: `${image}+${id}`\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addUpload\",\n      onClick: onClickImgUpload,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input-file\",\n        onChange: handleAddImages,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnStart\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/image/plus.png`,\n            alt: \"btnStart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputImgBtn,\n          type: \"file\",\n          multiple: true,\n          className: \"addImgsInput\",\n          accept: \"image/jpg, image/png, image/jpeg\",\n          onChange: postPostPhoto //axios post\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostingUpload, \"Olaxb/uFj4NjTxOHV2ycwP5BsE0=\");\n\n_c = PostingUpload;\nexport default PostingUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostingUpload\");","map":{"version":3,"names":["React","useRef","useState","axios","PostingUpload","setAllState","allState","showImages","setShowImages","postPostPhoto","e","console","log","target","files","formData","FormData","append","photos","photoURLs","method","url","data","headers","withCredentials","then","res","push","photoURL","catch","err","handleAddImages","imageLists","imageUrlLists","i","length","currentImageUrl","URL","createObjectURL","slice","inputImgBtn","onClickImgUpload","current","click","map","image","id","process","env","PUBLIC_URL"],"sources":["C:/Users/kimso/Desktop/latest_FE/latest_FE/src/PostingPage/PostingUpload.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './PostingUpload.css';\nimport axios from 'axios';\n\nfunction PostingUpload({ setAllState, allState }) {\n  //첨부된 이미지 저장 state\n  const [showImages, setShowImages] = useState([]);\n  // const formData = new FormData();\n\n  const postPostPhoto = async (e) => {\n    console.log('postPostPhoto:', e.target.files[0]);\n    const files = e.target.files;\n    const formData = new FormData();\n\n    // for (let i = 0; i < files.length; i++) {\n    //   formData.append('photo', showImages[i]);\n    //   console.log(showImages[i]);\n    // }\n    formData.append('photo', files[0]);\n\n    let photos = allState.photoURLs; //응답받은 photo url 배열로 담기\n\n    await axios({\n      method: 'POST',\n      url: 'http://api.cpp.co.kr:3300/posts/photo',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        photos.push(res.data.photoURL);\n        setAllState({\n          ...allState,\n          photoURLs: photos,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  console.log('photo', allState);\n\n  // //이미지 업로드 수 10개로 제한 (이미지 상대 경로 저장)\n  // const handleAddImages = (e) => {\n  //   const imageLists = e.target.files;\n  //   console.log('imageList : ', imageLists);\n  //   let imageUrlLists = [...showImages];\n\n  //   for (let i = 0; i < imageLists.length; i++) {\n  //     const currentImageUrl = URL.createObjectURL(imageLists[i]);\n  //     imageUrlLists.push(currentImageUrl);\n  //   }\n\n  //   if (imageUrlLists.length > 10) {\n  //     imageUrlLists = imageUrlLists.slice(0, 10);\n  //   }\n\n  //   setShowImages(imageUrlLists);\n  // };\n\n  //이미지 업로드 수 10개로 제한 (이미지 상대 경로 저장)\n  const handleAddImages = (e) => {\n    const imageLists = e.target.files;\n    console.log('imageList : ', imageLists);\n    let imageUrlLists = [...showImages];\n\n    for (let i = 0; i < imageLists.length; i++) {\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\n      imageUrlLists.push(currentImageUrl);\n    }\n\n    if (imageUrlLists.length > 10) {\n      imageUrlLists = imageUrlLists.slice(0, 10);\n    }\n\n    setShowImages(imageUrlLists);\n  };\n\n  const inputImgBtn = useRef();\n\n  const onClickImgUpload = () => {\n    inputImgBtn.current.click();\n  };\n\n  return (\n    <div className=\"postingUpload\">\n      <div className=\"uploadImgContainer\">\n        {showImages.map((image, id) => (\n          <img\n            className=\"uploadImg\"\n            key={id}\n            src={image}\n            alt={`${image}+${id}`}\n          />\n        ))}\n      </div>\n\n      <div className=\"addUpload\" onClick={onClickImgUpload}>\n        <label htmlFor=\"input-file\" onChange={handleAddImages}>\n          <div className=\"btnStart\">\n            <img\n              src={`${process.env.PUBLIC_URL}/image/plus.png`}\n              alt=\"btnStart\"\n            />\n          </div>\n          <input\n            ref={inputImgBtn}\n            type=\"file\"\n            multiple\n            className=\"addImgsInput\"\n            accept=\"image/jpg, image/png, image/jpeg\"\n            onChange={postPostPhoto} //axios post\n          />\n        </label>\n      </div>\n    </div>\n  );\n}\n\nexport default PostingUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}