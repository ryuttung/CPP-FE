{"ast":null,"code":"import e, { useLayoutEffect as o, useEffect as t, useState as n, useRef as a, useImperativeHandle as r, useContext as i, useMemo as s } from \"react\";\nimport l from \"react-dom\";\n\nconst d = \"undefined\" != typeof window && \"undefined\" != typeof document ? o : t,\n      c = (e, o, t) => {\n  d(() => {\n    if (!e || !t) return;\n\n    const n = function () {\n      for (var _len = arguments.length, o = new Array(_len), _key = 0; _key < _len; _key++) {\n        o[_key] = arguments[_key];\n      }\n\n      return void 0 === o ? t(e) : t(e, ...o);\n    };\n\n    return kakao.maps.event.addListener(e, o, n), () => {\n      kakao.maps.event.removeListener(e, o, n);\n    };\n  }, [e, o, t]);\n};\n\nvar p;\n!function (e) {\n  e[e.INITIALIZED = 0] = \"INITIALIZED\", e[e.LOADING = 1] = \"LOADING\", e[e.SUCCESS = 2] = \"SUCCESS\", e[e.FAILURE = 3] = \"FAILURE\";\n}(p || (p = {}));\n\nclass k {\n  constructor(_ref) {\n    let {\n      appkey: e,\n      id: o = \"__reactKakaoMapsSdkloaderId\",\n      libraries: t = [],\n      nonce: n,\n      retries: a = 3,\n      url: r = \"//dapi.kakao.com/v2/maps/sdk.js\"\n    } = _ref;\n\n    if (this.id = void 0, this.appkey = void 0, this.url = void 0, this.libraries = void 0, this.nonce = void 0, this.retries = void 0, this.callbacks = [], this.done = !1, this.loading = !1, this.errors = [], this.onerrorEvent = void 0, this.id = o, this.appkey = e, this.libraries = t, this.nonce = n, this.retries = a, this.url = r, k.instance) {\n      if (!k.equalOptions(this.options, k.instance.options)) throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(k.instance.options)}`);\n      return k.instance;\n    }\n\n    k.instance = this;\n  }\n\n  get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url\n    };\n  }\n\n  static isLoaded() {\n    return new Promise(e => window.kakao && window.kakao.maps ? e(!0) : k.instance ? k.instance.status === p.FAILURE || k.instance.status === p.INITIALIZED ? e(!1) : (k.instance.status === p.LOADING && k.loadcheckcallbacks.push(o => e(!o)), e(!0)) : k.loadcheckcallbacks.push(o => {\n      e(!o);\n    }));\n  }\n\n  load() {\n    return new Promise((e, o) => {\n      this.loadCallback(t => {\n        t ? o(t.error) : e(window.kakao);\n      });\n    });\n  }\n\n  get status() {\n    return this.onerrorEvent ? p.FAILURE : this.done ? p.SUCCESS : this.loading ? p.LOADING : p.INITIALIZED;\n  }\n\n  get failed() {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n\n  loadCallback(e) {\n    this.callbacks.push(e), this.execute();\n  }\n\n  resetIfRetryingFailed() {\n    this.failed && this.reset();\n  }\n\n  reset() {\n    this.deleteScript(), this.done = !1, this.loading = !1, this.errors = [], this.onerrorEvent = void 0;\n  }\n\n  execute() {\n    if (this.resetIfRetryingFailed(), this.done) this.callback();else {\n      if (window.kakao && window.kakao.maps) return console.warn(\"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"), void this.callback();\n      this.loading || (this.loading = !0, this.setScript());\n    }\n  }\n\n  setScript() {\n    document.getElementById(this.id) && this.callback();\n    const e = this.createUrl(),\n          o = document.createElement(\"script\");\n    o.id = this.id, o.type = \"text/javascript\", o.src = e, o.onerror = this.loadErrorCallback.bind(this), o.onload = this.callback.bind(this), o.defer = !0, o.async = !0, this.nonce && (o.nonce = this.nonce), document.head.appendChild(o);\n  }\n\n  loadErrorCallback(e, o, t, n, a) {\n    if (this.errors.push({\n      event: e,\n      source: o,\n      lineno: t,\n      colno: n,\n      error: a\n    }), this.errors.length <= this.retries) {\n      const e = this.errors.length * 2 ** this.errors.length;\n      console.log(`Failed to load Kakao Maps script, retrying in ${e} ms.`), setTimeout(() => {\n        this.deleteScript(), this.setScript();\n      }, e);\n    } else this.onerrorEvent = this.errors[this.errors.length - 1], this.callback();\n  }\n\n  createUrl() {\n    let e = this.url;\n    return e += `?appkey=${this.appkey}`, this.libraries.length && (e += `&libraries=${this.libraries.join(\",\")}`), e += \"&autoload=false\", e;\n  }\n\n  deleteScript() {\n    const e = document.getElementById(this.id);\n    e && e.remove();\n  }\n\n  callback() {\n    kakao.maps.load(() => {\n      this.done = !0, this.loading = !1, this.callbacks.forEach(e => {\n        e(this.onerrorEvent);\n      }), this.callbacks = [], k.loadcheckcallbacks.forEach(e => {\n        e(this.onerrorEvent);\n      }), k.loadcheckcallbacks = [];\n    });\n  }\n\n  static equalOptions(e, o) {\n    if (e.appkey !== o.appkey) return !1;\n    if (e.id !== o.id) return !1;\n    if (e.libraries.length !== o.libraries.length) return !1;\n\n    for (let t = 0; t < e.libraries.length; ++t) if (e.libraries[t] !== o.libraries[t]) return !1;\n\n    return e.nonce === o.nonce && e.retries === o.retries && e.url === o.url;\n  }\n\n}\n\nk.instance = void 0, k.loadcheckcallbacks = [];\n\nconst u = e.createContext(void 0),\n      m = e.forwardRef((_ref2, U) => {\n  let {\n    id: o = \"react-kakao-maps-sdk-map-container\",\n    style: t,\n    children: i,\n    center: s,\n    isPanto: l = !1,\n    padding: p = 32,\n    className: m,\n    disableDoubleClick: g,\n    disableDoubleClickZoom: h,\n    draggable: w,\n    zoomable: v,\n    keyboardShortcuts: f,\n    level: y,\n    maxLevel: C,\n    minLevel: b,\n    mapTypeId: I,\n    projectionId: O,\n    scrollwheel: M,\n    tileAnimation: L,\n    onBoundsChanged: x,\n    onCenterChanged: S,\n    onClick: z,\n    onDoubleClick: E,\n    onDrag: P,\n    onDragEnd: R,\n    onDragStart: A,\n    onIdle: D,\n    onMaptypeidChanged: T,\n    onMouseMove: W,\n    onRightClick: Z,\n    onTileLoaded: N,\n    onZoomChanged: _,\n    onZoomStart: j,\n    onCreate: F\n  } = _ref2;\n  const [G, V] = n(!1),\n        [B, $] = n(),\n        q = a(null);\n  return d(() => {\n    k.isLoaded().then(V);\n  }, []), d(() => {\n    if (!G) return;\n    const e = q.current;\n    if (!e) return;\n    const o = \"lat\" in s ? new kakao.maps.LatLng(s.lat, s.lng) : new kakao.maps.Coords(s.x, s.y),\n          t = new kakao.maps.Map(e, {\n      center: o,\n      disableDoubleClick: g,\n      disableDoubleClickZoom: h,\n      draggable: w,\n      keyboardShortcuts: f,\n      level: y,\n      mapTypeId: I,\n      projectionId: O,\n      scrollwheel: M,\n      tileAnimation: L\n    });\n    $(t);\n  }, [G, g, h, I, L]), r(U, () => B, [B]), d(() => {\n    B && F && F(B);\n  }, [B, F]), d(() => {\n    if (!B) return;\n    let e = B.getCenter();\n    e instanceof kakao.maps.Coords && (e = e.toLatLng());\n    const o = \"lat\" in s ? new kakao.maps.LatLng(s.lat, s.lng) : new kakao.maps.Coords(s.x, s.y);\n    o instanceof kakao.maps.LatLng && o.equals(e) || o instanceof kakao.maps.Coords && o.toLatLng().equals(e) || (l ? B.panTo(o, p) : B.setCenter(o));\n  }, [B, s.lat, s.lng, s.x, s.y]), d(() => {\n    B && void 0 !== w && B.setDraggable(w);\n  }, [B, w]), d(() => {\n    B && void 0 !== v && B.setZoomable(v);\n  }, [B, v]), d(() => {\n    B && f && \"boolean\" == typeof f && B.setKeyboardShortcuts(f);\n  }, [B, f]), d(() => {\n    B && y && B.setLevel(y);\n  }, [B, y]), d(() => {\n    B && I && B.setMapTypeId(I);\n  }, [B, I]), d(() => {\n    B && O && B.setProjectionId(O);\n  }, [B, O]), d(() => {\n    B && C && B.setMaxLevel(C);\n  }, [B, C]), d(() => {\n    B && b && B.setMinLevel(b);\n  }, [B, b]), c(B, \"bounds_changed\", x), c(B, \"center_changed\", S), c(B, \"click\", z), c(B, \"dblclick\", E), c(B, \"drag\", P), c(B, \"dragstart\", A), c(B, \"dragend\", R), c(B, \"idle\", D), c(B, \"maptypeid_changed\", T), c(B, \"mousemove\", W), c(B, \"rightclick\", Z), c(B, \"tilesloaded\", N), c(B, \"zoom_changed\", _), c(B, \"zoom_start\", j), e.createElement(e.Fragment, null, e.createElement(\"div\", {\n    id: o,\n    style: t,\n    className: m,\n    ref: q\n  }), B && e.createElement(u.Provider, {\n    value: B\n  }, i));\n}),\n      g = e => {\n  const o = i(u);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useMap\") + \" must exist inside Map Component!\");\n  return o;\n},\n      h = e.forwardRef((_ref3, g) => {\n  let {\n    map: e,\n    position: t,\n    marker: n,\n    children: i,\n    altitude: d,\n    disableAutoPan: c,\n    range: p,\n    removable: k,\n    zIndex: u,\n    onCreate: m\n  } = _ref3;\n  const h = a(document.createElement(\"div\")),\n        w = s(() => {\n    const e = new kakao.maps.InfoWindow({\n      altitude: d,\n      disableAutoPan: c,\n      range: p,\n      removable: k,\n      zIndex: u,\n      content: h.current,\n      position: t\n    });\n    return h.current.style.display = \"none\", e;\n  }, [c, k]);\n  return r(g, () => w, [w]), o(() => (w.open(e, n), () => {\n    w.close();\n  }), [e, n]), o(() => {\n    m && m(w);\n  }, [w, m]), o(() => {\n    w && w.setPosition(t);\n  }, [w, t]), o(() => {\n    w && d && w.setAltitude(d);\n  }, [w, d]), o(() => {\n    w && p && w.setRange(p);\n  }, [w, p]), o(() => {\n    w && u && w.setZIndex(u);\n  }, [w, u]), h.current.parentElement && l.createPortal(i, h.current.parentElement);\n}),\n      w = e.createContext(void 0),\n      v = e.forwardRef((_ref4, M) => {\n  let {\n    children: t,\n    averageCenter: n,\n    calculator: a,\n    clickable: i,\n    disableClickZoom: l,\n    gridSize: d,\n    hoverable: p,\n    minClusterSize: k,\n    minLevel: u,\n    styles: m,\n    texts: h,\n    onClusterclick: v,\n    onClusterdblclick: f,\n    onClustered: y,\n    onClusterout: C,\n    onClusterover: b,\n    onClusterrightclick: I,\n    onCreate: O\n  } = _ref4;\n  const L = g(\"MarkerClusterer\"),\n        x = s(() => {\n    if (window.kakao.maps.MarkerClusterer) return new kakao.maps.MarkerClusterer({\n      averageCenter: n,\n      calculator: a,\n      clickable: i,\n      disableClickZoom: l,\n      gridSize: d,\n      hoverable: p,\n      minClusterSize: k,\n      minLevel: u,\n      styles: m,\n      texts: h\n    });\n    console.warn(\"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []);\n  return r(M, () => x, [x]), o(() => {\n    null == x || x.setMap(L);\n  }, [L, x]), o(() => {\n    x && O && O(x);\n  }, [x, O]), o(() => {\n    x && d && (x.setGridSize(d), x.redraw());\n  }, [x, d]), o(() => {\n    x && k && (x.setMinClusterSize(k), x.redraw());\n  }, [x, k]), o(() => {\n    x && void 0 !== n && (x.setAverageCenter(n), x.redraw());\n  }, [x, n]), o(() => {\n    x && u && (x.setMinLevel(u), x.redraw());\n  }, [x, u]), o(() => {\n    x && h && (x.setTexts(h), x.redraw());\n  }, [x, h]), o(() => {\n    x && a && (x.setCalculator(a), x.redraw());\n  }, [x, a]), o(() => {\n    x && m && (x.setStyles(m), x.redraw());\n  }, [x, m]), c(x, \"clusterclick\", v), c(x, \"clusterover\", b), c(x, \"clusterout\", C), c(x, \"clusterdblclick\", f), c(x, \"clusterrightclick\", I), c(x, \"clustered\", y), x ? e.createElement(w.Provider, {\n    value: x\n  }, t) : null;\n}),\n      f = e.forwardRef((_ref5, L) => {\n  let {\n    map: t,\n    position: n,\n    children: a,\n    altitude: l,\n    clickable: d,\n    draggable: p,\n    image: k,\n    infoWindowOptions: u,\n    onCreate: m,\n    onClick: g,\n    onDragEnd: v,\n    onDragStart: f,\n    onMouseOut: y,\n    onMouseOver: C,\n    opacity: b,\n    range: I,\n    title: O,\n    zIndex: M\n  } = _ref5;\n  const x = i(w),\n        S = s(() => new kakao.maps.Marker({\n    altitude: l,\n    clickable: d,\n    draggable: p,\n    image: k,\n    opacity: b,\n    range: I,\n    title: O,\n    zIndex: M,\n    position: n\n  }), []);\n  return r(L, () => S, [S]), o(() => (x ? x.addMarker(S) : S.setMap(t), () => {\n    x ? x.removeMarker(S) : S.setMap(null);\n  }), [t, x, S]), o(() => {\n    m && m(S);\n  }, [S, m]), c(S, \"click\", g), c(S, \"dragstart\", f), c(S, \"dragend\", v), c(S, \"mouseout\", y), c(S, \"mouseover\", C), o(() => {\n    t && S && n && S.setPosition(n);\n  }, [t, S, n]), o(() => {\n    t && S && k && S.setImage(k);\n  }, [t, S, k]), o(() => {\n    t && S && l && S.setAltitude(l);\n  }, [t, S, l]), o(() => {\n    t && S && void 0 !== d && S.setClickable(d);\n  }, [t, S, d]), o(() => {\n    t && S && void 0 !== p && S.setDraggable(p);\n  }, [t, S, p]), o(() => {\n    t && S && b && S.setOpacity(b);\n  }, [t, S, b]), o(() => {\n    t && S && I && S.setRange(I);\n  }, [t, S, I]), o(() => {\n    t && S && O && S.setTitle(O);\n  }, [t, S, O]), o(() => {\n    t && S && M && S.setZIndex(M);\n  }, [t, S, M]), a ? e.createElement(h, {\n    position: n,\n    map: t,\n    marker: S,\n    altitude: null == u ? void 0 : u.altitude,\n    disableAutoPan: null == u ? void 0 : u.disableAutoPan,\n    range: null == u ? void 0 : u.range,\n    removable: null == u ? void 0 : u.removable,\n    zIndex: null == u ? void 0 : u.zIndex\n  }, a) : null;\n}),\n      y = e.forwardRef((_ref6, v) => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    clickable: a,\n    draggable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: u,\n    opacity: m,\n    title: h,\n    zIndex: w\n  } = _ref6;\n  const y = g(\"MapMarker\"),\n        C = s(() => {\n    var e, t, n, a, r, i, s, l, d, c, p, k;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (i = o.options) ? void 0 : i.shape,\n      spriteOrigin: (null == (s = o.options) ? void 0 : s.spriteOrigin) && new kakao.maps.Point(null == (l = o.options) ? void 0 : l.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (p = o.options) ? void 0 : p.spriteSize.width, null == (k = o.options) ? void 0 : k.spriteSize.height)\n    });\n  }, [o]),\n        b = s(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : new kakao.maps.Coords(t.x, t.y).toLatLng(), [t.lat, t.lng, t.x, t.y]);\n  return e.createElement(f, {\n    map: y,\n    position: b,\n    image: C,\n    clickable: a,\n    draggable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: u,\n    opacity: m,\n    title: h,\n    zIndex: w,\n    ref: v\n  }, n);\n}),\n      C = e.forwardRef((_ref7, l) => {\n  let {\n    position: o,\n    children: t,\n    disableAutoPan: n,\n    removable: a,\n    zIndex: r,\n    onCreate: i\n  } = _ref7;\n  const d = g(\"MapInfoWindow\"),\n        c = s(() => new kakao.maps.LatLng(o.lat, o.lng), [o.lat, o.lng]);\n  return e.createElement(h, {\n    disableAutoPan: n,\n    removable: a,\n    zIndex: r,\n    map: d,\n    position: c,\n    onCreate: i,\n    ref: l\n  }, t);\n}),\n      b = e.forwardRef((_ref8, u) => {\n  let {\n    position: e,\n    children: t,\n    clickable: n,\n    xAnchor: d,\n    yAnchor: c,\n    zIndex: p,\n    onCreate: k\n  } = _ref8;\n  const m = i(w),\n        h = g(\"CustomOverlayMap\"),\n        v = a(document.createElement(\"div\")),\n        f = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        y = s(() => {\n    const e = new kakao.maps.CustomOverlay({\n      clickable: n,\n      xAnchor: d,\n      yAnchor: c,\n      zIndex: p,\n      position: f,\n      content: v.current\n    });\n    return v.current.style.display = \"none\", e;\n  }, [n, d, c]);\n  return r(u, () => y, [y]), o(() => {\n    if (h) return m ? m.addMarker(y) : y.setMap(h), () => {\n      m ? m.removeMarker(y) : y.setMap(null);\n    };\n  }, [h, m, y]), o(() => {\n    k && k(y);\n  }, [y, k]), o(() => {\n    y.setPosition(f);\n  }, [y, f]), o(() => {\n    p && y.setZIndex(p);\n  }, [y, p]), v.current.parentElement && l.createPortal(t, v.current.parentElement);\n}),\n      I = e.forwardRef((_ref9, t) => {\n  let {\n    position: e = kakao.maps.ControlPosition.TOPRIGHT\n  } = _ref9;\n  const n = g(\"MapTypeControl\"),\n        a = s(() => new kakao.maps.MapTypeControl(), []);\n  return r(t, () => a, [a]), o(() => (n.addControl(a, e), () => {\n    n.removeControl(a);\n  }), [n, a, e]), null;\n}),\n      O = e.forwardRef((_ref10, o) => {\n  let {\n    position: e = kakao.maps.ControlPosition.RIGHT\n  } = _ref10;\n  const n = g(\"ZoomControl\"),\n        a = s(() => new kakao.maps.ZoomControl(), []);\n  return r(o, () => a, [a]), t(() => (n.addControl(a, e), () => {\n    n.removeControl(a);\n  }), [n, e]), null;\n}),\n      M = _ref11 => {\n  let {\n    type: e\n  } = _ref11;\n  const o = g(\"MapTypeId\");\n  return t(() => (o.addOverlayMapTypeId(e), () => {\n    o.removeOverlayMapTypeId(e);\n  }), [o, e]), null;\n},\n      L = e.forwardRef((_ref12, y) => {\n  let {\n    center: e,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: i,\n    strokeOpacity: l,\n    strokeStyle: d,\n    strokeWeight: p,\n    zIndex: k,\n    onMouseover: u,\n    onMouseout: m,\n    onMousemove: h,\n    onMousedown: w,\n    onClick: v,\n    onCreate: f\n  } = _ref12;\n  const C = g(\"Circle\"),\n        b = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        I = s(() => new kakao.maps.Circle({\n    center: b,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: i,\n    strokeOpacity: l,\n    strokeStyle: d,\n    strokeWeight: p,\n    zIndex: k\n  }), []);\n  return r(y, () => I, [I]), o(() => (I.setMap(C), () => {\n    I.setMap(null);\n  }), [C, I]), o(() => {\n    f && f(I);\n  }, [I, f]), o(() => {\n    I && I.setPosition(b);\n  }, [I, b]), o(() => {\n    I.setRadius(t);\n  }, [I, t]), o(() => {\n    k && I.setZIndex(k);\n  }, [I, k]), o(() => {\n    I.setOptions({\n      fillColor: n,\n      fillOpacity: a,\n      strokeColor: i,\n      strokeOpacity: l,\n      strokeStyle: d,\n      strokeWeight: p\n    });\n  }, [I, n, a, i, l, d, p]), c(I, \"mouseover\", u), c(I, \"mouseout\", m), c(I, \"mousemove\", h), c(I, \"mousedown\", w), c(I, \"click\", v), null;\n}),\n      x = e.forwardRef((_ref13, v) => {\n  let {\n    path: e,\n    endArrow: t,\n    onClick: n,\n    onMousedown: a,\n    onMousemove: i,\n    onMouseout: l,\n    onMouseover: d,\n    onCreate: p,\n    strokeColor: k,\n    strokeOpacity: u,\n    strokeStyle: m,\n    strokeWeight: h,\n    zIndex: w\n  } = _ref13;\n  const f = g(\"Polyline\"),\n        y = s(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        C = s(() => new kakao.maps.Polyline({\n    path: y,\n    endArrow: t,\n    strokeColor: k,\n    strokeOpacity: u,\n    strokeStyle: m,\n    strokeWeight: h,\n    zIndex: w\n  }), []);\n  return r(v, () => C, [C]), o(() => (C.setMap(f), () => C.setMap(null)), [f, C]), o(() => {\n    p && p(C);\n  }, [C, p]), o(() => {\n    C.setOptions({\n      endArrow: t,\n      strokeColor: k,\n      strokeOpacity: u,\n      strokeStyle: m,\n      strokeWeight: h\n    });\n  }, [C, t, k, u, m, h]), o(() => {\n    C.setPath(y);\n  }, [C, y]), o(() => {\n    w && C.setZIndex(w);\n  }, [C, w]), c(C, \"mouseover\", d), c(C, \"mouseout\", l), c(C, \"mousemove\", i), c(C, \"mousedown\", a), c(C, \"click\", n), null;\n}),\n      S = e.forwardRef((_ref14, f) => {\n  let {\n    path: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: i,\n    onMouseover: l,\n    onCreate: d,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: u,\n    strokeWeight: m,\n    fillColor: h,\n    fillOpacity: w,\n    zIndex: v\n  } = _ref14;\n  const y = g(\"Polygon\"),\n        C = s(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        b = s(() => new kakao.maps.Polygon({\n    path: C,\n    fillColor: h,\n    fillOpacity: w,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: u,\n    strokeWeight: m,\n    zIndex: v\n  }), []);\n  return r(f, () => b, [b]), o(() => (b.setMap(y), () => b.setMap(null)), [y, b]), o(() => {\n    d && d(b);\n  }, [b, d]), o(() => {\n    b.setOptions({\n      fillColor: h,\n      fillOpacity: w,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: u,\n      strokeWeight: m\n    });\n  }, [b, h, w, p, k, u, m]), o(() => {\n    b.setPath(C);\n  }, [b, C]), o(() => {\n    v && b.setZIndex(v);\n  }, [b, v]), c(b, \"mouseover\", l), c(b, \"mouseout\", i), c(b, \"mousemove\", a), c(b, \"mousedown\", n), c(b, \"click\", t), null;\n}),\n      z = e.forwardRef((_ref15, f) => {\n  let {\n    bounds: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: i,\n    onMouseover: l,\n    onCreate: d,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: u,\n    strokeWeight: m,\n    fillColor: h,\n    fillOpacity: w,\n    zIndex: v\n  } = _ref15;\n  const y = g(\"Rectangle\"),\n        C = s(() => new kakao.maps.LatLngBounds(new kakao.maps.LatLng(e.sw.lat, e.sw.lng), new kakao.maps.LatLng(e.ne.lat, e.ne.lng)), [e]),\n        b = s(() => new kakao.maps.Rectangle({\n    bounds: C,\n    fillColor: h,\n    fillOpacity: w,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: u,\n    strokeWeight: m,\n    zIndex: v\n  }), []);\n  return r(f, () => b, [b]), o(() => (b.setMap(y), () => b.setMap(null)), [y, b]), o(() => {\n    d && d(b);\n  }, [b, d]), o(() => {\n    b.setOptions({\n      fillColor: h,\n      fillOpacity: w,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: u,\n      strokeWeight: m\n    });\n  }, [b, h, w, p, k, u, m]), o(() => {\n    b.setBounds(C);\n  }, [b, C]), o(() => {\n    v && b.setZIndex(v);\n  }, [b, v]), c(b, \"mouseover\", l), c(b, \"mouseout\", i), c(b, \"mousemove\", a), c(b, \"mousedown\", n), c(b, \"click\", t), null;\n}),\n      E = e.forwardRef((_ref16, C) => {\n  let {\n    center: e,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: i,\n    strokeColor: l,\n    strokeOpacity: d,\n    strokeStyle: p,\n    strokeWeight: k,\n    zIndex: u,\n    onMouseover: m,\n    onMouseout: h,\n    onMousemove: w,\n    onMousedown: v,\n    onClick: f,\n    onCreate: y\n  } = _ref16;\n  const b = g(\"Ellipse\"),\n        I = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        O = s(() => new kakao.maps.Ellipse({\n    center: I,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: i,\n    strokeColor: l,\n    strokeOpacity: d,\n    strokeStyle: p,\n    strokeWeight: k,\n    zIndex: u\n  }), []);\n  return r(C, () => O, [O]), o(() => (O.setMap(b), () => {\n    O.setMap(null);\n  }), [b, O]), o(() => {\n    y && y(O);\n  }, [O, y]), o(() => {\n    O && O.setPosition(I);\n  }, [O, I]), o(() => {\n    O.setRadius(t, n);\n  }, [O, t, n]), o(() => {\n    u && O.setZIndex(u);\n  }, [O, u]), o(() => {\n    O.setOptions({\n      fillColor: a,\n      fillOpacity: i,\n      strokeColor: l,\n      strokeOpacity: d,\n      strokeStyle: p,\n      strokeWeight: k\n    });\n  }, [O, a, i, l, d, p, k]), c(O, \"mouseover\", m), c(O, \"mouseout\", h), c(O, \"mousemove\", w), c(O, \"mousedown\", v), c(O, \"click\", f), null;\n}),\n      P = e.forwardRef((_ref17, i) => {\n  let {\n    draw: e,\n    onAdd: t,\n    onRemove: n,\n    onCreate: a\n  } = _ref17;\n  const l = g(),\n        d = s(() => {\n    class o extends kakao.maps.AbstractOverlay {\n      constructor(e, o, t) {\n        super(), this.draw = e, this.onAdd = o, this.onRemove = t;\n      }\n\n    }\n\n    return new o(e, t, n);\n  }, [e, t, n]);\n  return r(i, () => d, [d]), o(() => (d.setMap(l), () => {\n    d.setMap(null);\n  }), [l, d]), o(() => {\n    a && a(d);\n  }, [d, a]), null;\n}),\n      R = e.createContext(void 0),\n      A = e.forwardRef((_ref18, O) => {\n  let {\n    id: o = \"react-kakao-maps-sdk-roadview-container\",\n    style: t,\n    children: i,\n    position: s,\n    className: l,\n    pan: p,\n    panoId: u,\n    panoX: m,\n    panoY: g,\n    tilt: h,\n    zoom: w,\n    onCreate: v,\n    onInit: f,\n    onPanoidChange: y,\n    onPositionChanged: C,\n    onViewpointChange: b,\n    onErrorGetNearestPanoId: I\n  } = _ref18;\n  const [M, L] = n(!1),\n        [x, S] = n(!0),\n        [z, E] = n(),\n        P = a(null);\n  return d(() => {\n    k.isLoaded().then(L);\n  }, []), d(() => {\n    if (!M) return;\n    if (!P.current) return;\n    const e = new kakao.maps.Roadview(P.current, {\n      pan: p,\n      panoId: u,\n      panoX: m,\n      panoY: g,\n      tilt: h,\n      zoom: w\n    });\n    E(e);\n  }, [M, m, g, w]), r(O, () => z, [z]), d(() => {\n    z && v && v(z);\n  }, [z, v]), d(() => {\n    if (!z || u || z.getPosition().getLat() === s.lat && z.getPosition().getLng() === s.lng) return;\n    const e = new kakao.maps.LatLng(s.lat, s.lng);\n    new kakao.maps.RoadviewClient().getNearestPanoId(e, s.radius, o => {\n      null === o && I ? I(z) : z.setPanoId(o, e);\n    });\n  }, [z, u, s.lat, s.lng, s.radius, I]), d(() => {\n    if (!z || !u || u === z.getPanoId() || z.getPosition().getLat() === s.lat && z.getPosition().getLng() === s.lng) return;\n    const e = new kakao.maps.LatLng(s.lat, s.lng);\n    z.setPanoId(u, e);\n  }, [z, u, s.lat, s.lng]), d(() => {\n    if (!z) return;\n    const e = z.getViewpoint();\n    e.pan === p && e.tilt === h || (p && (e.pan = p), h && (e.tilt = h), z.setViewpoint(e));\n  }, [z, p, h]), c(z, \"init\", e => {\n    S(!1), f && f(e);\n  }), c(z, \"panoid_changed\", y), c(z, \"viewpoint_changed\", b), c(z, \"position_changed\", C), e.createElement(e.Fragment, null, e.createElement(\"div\", {\n    id: o,\n    className: l,\n    style: t,\n    ref: P\n  }), z && !x && e.createElement(R.Provider, {\n    value: z\n  }, i));\n}),\n      D = e => {\n  const o = i(R);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useRoadview\") + \" must exist inside Roadview Component!\");\n  return o;\n},\n      T = e.forwardRef((_ref19, m) => {\n  let {\n    position: e,\n    children: t,\n    clickable: n,\n    xAnchor: i,\n    yAnchor: d,\n    zIndex: c,\n    altitude: p,\n    range: k,\n    onCreate: u\n  } = _ref19;\n  const g = D(\"CustomOverlayRoadview\"),\n        h = a(document.createElement(\"div\")),\n        w = s(() => \"lat\" in e ? new kakao.maps.LatLng(e.lat, e.lng) : new kakao.maps.Viewpoint(e.pan, e.tilt, e.zoom, e.panoId), [e.lat, e.lng, e.pan, e.tilt, e.zoom, e.panoId]),\n        v = s(() => {\n    const e = new kakao.maps.CustomOverlay({\n      clickable: n,\n      xAnchor: i,\n      yAnchor: d,\n      zIndex: c,\n      position: w,\n      content: h.current\n    });\n    return h.current.style.display = \"none\", e;\n  }, [n, i, d]);\n  return r(m, () => v, [v]), o(() => {\n    if (g) return v.setMap(g), () => {\n      v.setMap(null);\n    };\n  }, [v, g]), o(() => {\n    u && u(v);\n  }, [v, u]), o(() => {\n    v.setPosition(w);\n  }, [v, w]), o(() => {\n    c && v.setZIndex(c);\n  }, [v, c]), o(() => {\n    p && v.setAltitude(p);\n  }, [v, p]), o(() => {\n    k && v.setRange(k);\n  }, [v, k]), h.current.parentElement && l.createPortal(t, h.current.parentElement);\n}),\n      W = e.forwardRef((_ref20, v) => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    altitude: a,\n    clickable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: u,\n    opacity: m,\n    range: g,\n    title: h,\n    zIndex: w\n  } = _ref20;\n  const y = D(\"RoadviewMarker\"),\n        C = s(() => {\n    var e, t, n, a, r, i, s, l, d, c, p, k;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (i = o.options) ? void 0 : i.shape,\n      spriteOrigin: (null == (s = o.options) ? void 0 : s.spriteOrigin) && new kakao.maps.Point(null == (l = o.options) ? void 0 : l.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (p = o.options) ? void 0 : p.spriteSize.width, null == (k = o.options) ? void 0 : k.spriteSize.height)\n    });\n  }, [o]),\n        b = s(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : \"x\" in t ? new kakao.maps.Coords(t.x, t.y).toLatLng() : new kakao.maps.Viewpoint(t.pan, t.tilt, t.zoom, t.panoId), [t.lat, t.lng, t.x, t.y, t.pan, t.tilt, t.zoom, null == t ? void 0 : t.panoId]);\n  return e.createElement(f, {\n    map: y,\n    position: b,\n    image: C,\n    altitude: a,\n    clickable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: u,\n    opacity: m,\n    range: g,\n    title: h,\n    zIndex: w,\n    ref: v\n  }, n);\n}),\n      Z = e.forwardRef((_ref21, c) => {\n  let {\n    position: o,\n    children: t,\n    altitude: n,\n    disableAutoPan: a,\n    range: r,\n    removable: i,\n    zIndex: l,\n    onCreate: d\n  } = _ref21;\n  const p = D(\"RoadviewInfoWindow\"),\n        k = s(() => \"lat\" in o ? new kakao.maps.LatLng(o.lat, o.lng) : new kakao.maps.Viewpoint(o.pan, o.tilt, o.zoom, o.panoId), [o.lat, o.lng, o.pan, o.tilt, o.zoom, o.panoId]);\n  return e.createElement(h, {\n    altitude: n,\n    disableAutoPan: a,\n    range: r,\n    removable: i,\n    zIndex: l,\n    map: p,\n    position: k,\n    onCreate: d,\n    ref: c\n  }, t);\n}),\n      N = e.createContext(void 0);\n\nfunction _(e, t, n) {\n  o(() => {\n    e && n && e.addListener(t, function () {\n      for (var _len2 = arguments.length, o = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        o[_key2] = arguments[_key2];\n      }\n\n      return void 0 === o ? n(e) : n(e, ...o);\n    });\n  }, [n, e, t]);\n}\n\nconst j = e.forwardRef(function (_ref22, O) {\n  let {\n    arrowOptions: t,\n    circleOptions: n,\n    ellipseOptions: a,\n    markerOptions: i,\n    polygonOptions: l,\n    polylineOptions: d,\n    rectangleOptions: c,\n    drawingMode: p,\n    guideTooltip: k,\n    onSelect: u,\n    onDrawstart: m,\n    onDraw: h,\n    onDrawend: w,\n    onDrawnext: v,\n    onCancle: f,\n    onRemove: y,\n    onStateChanged: C,\n    onCreate: b,\n    children: I\n  } = _ref22;\n  const M = g(\"Toolbox\"),\n        L = s(() => {\n    if (window.kakao.maps.drawing) return new kakao.maps.drawing.DrawingManager({\n      map: M,\n      drawingMode: p,\n      guideTooltip: k,\n      arrowOptions: t,\n      circleOptions: n,\n      ellipseOptions: a,\n      markerOptions: i,\n      polygonOptions: l,\n      polylineOptions: d,\n      rectangleOptions: c\n    });\n    console.warn(\"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []);\n  return r(O, () => L, [L]), o(() => {\n    L && b && b(L);\n  }, [L, b]), _(L, \"select\", u), _(L, \"drawstart\", m), _(L, \"draw\", h), _(L, \"drawend\", w), _(L, \"drawnext\", v), _(L, \"cancel\", f), _(L, \"remove\", y), _(L, \"state_changed\", C), L ? e.createElement(N.Provider, {\n    value: L\n  }, I) : null;\n}),\n      F = e.forwardRef(function (_ref23, t) {\n  let {\n    position: e\n  } = _ref23;\n  e = e || kakao.maps.ControlPosition.TOP;\n  const n = g(\"Toolbox\"),\n        a = i(N);\n  if (!a) throw new Error(\"Toolbox must exist inside DrawingManager Component!`\");\n  const l = s(() => new kakao.maps.drawing.Toolbox({\n    drawingManager: a\n  }), [a]);\n  return r(t, () => l, [l]), o(() => {\n    const o = l.getElement();\n    return n.addControl(o, e), () => {\n      n.removeControl(o);\n    };\n  }, [n, l, e]), null;\n});\n\nfunction U() {\n  return (U = Object.assign || function (e) {\n    for (var o = 1; o < arguments.length; o++) {\n      var t = arguments[o];\n\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nconst G = e.forwardRef((_ref24, u) => {\n  let {\n    id: o = \"react-kakao-maps-sdk-staticmap-container\",\n    style: t,\n    className: i,\n    center: s,\n    marker: l,\n    level: c,\n    mapTypeId: p,\n    onCreate: k\n  } = _ref24;\n  const [m, g] = n(),\n        h = a(null);\n  return d(() => {\n    if (!window.kakao) return void console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n    const e = h.current;\n    e && kakao.maps.load(() => {\n      const o = Array.isArray(l) ? l.map(e => U({}, e, {\n        position: new kakao.maps.LatLng(e.position.lat, e.position.lng)\n      })) : \"object\" == typeof l && l.position ? U({}, l, {\n        position: new kakao.maps.LatLng(l.position.lat, l.position.lng)\n      }) : l,\n            t = new kakao.maps.StaticMap(e, {\n        center: new kakao.maps.LatLng(s.lat, s.lng),\n        level: c,\n        mapTypeId: p,\n        marker: o\n      });\n      g(t);\n    });\n  }, [JSON.stringify(l)]), r(u, () => m, [m]), d(() => {\n    m && m.setCenter(new kakao.maps.LatLng(s.lat, s.lng));\n  }, [m, s.lat, s.lng]), d(() => {\n    m && c && m.setLevel(c);\n  }, [m, c]), d(() => {\n    m && p && m.setMapTypeId(p);\n  }, [m, p]), d(() => {\n    m && k && k(m);\n  }, [m, k]), e.createElement(\"div\", {\n    id: o,\n    style: t,\n    className: i,\n    ref: h\n  });\n}),\n      V = e => {\n  const [o, a] = n({\n    loading: !0,\n    error: void 0\n  }),\n        r = s(() => new k(e), [JSON.stringify(e)]);\n  return t(() => {\n    r.load().then(() => a({\n      loading: !1,\n      error: void 0\n    })).catch(e => a({\n      loading: !1,\n      error: e\n    }));\n  }, [r]), o;\n};\n\nexport { P as AbstractOverlay, L as Circle, b as CustomOverlayMap, T as CustomOverlayRoadview, j as DrawingManager, E as Ellipse, k as Loader, m as Map, C as MapInfoWindow, y as MapMarker, I as MapTypeControl, M as MapTypeId, v as MarkerClusterer, S as Polygon, x as Polyline, z as Rectangle, A as Roadview, Z as RoadviewInfoWindow, W as RoadviewMarker, G as StaticMap, F as Toolbox, O as ZoomControl, V as useInjectKakaoMapApi, g as useMap, D as useRoadview };","map":{"version":3,"mappings":"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","names":["useIsomorphicLayoutEffect","window","document","useLayoutEffect","useEffect","useKakaoEvent","target","type","callback","wrapCallback","arg","undefined","kakao","maps","event","addListener","removeListener","LoaderStatus","Loader","constructor","appkey","id","libraries","nonce","retries","url","callbacks","done","loading","errors","onerrorEvent","this","instance","equalOptions","options","Error","JSON","stringify","isLoaded","Promise","resolve","status","FAILURE","INITIALIZED","LOADING","loadcheckcallbacks","push","e","load","reject","loadCallback","err","error","SUCCESS","failed","length","fn","execute","resetIfRetryingFailed","reset","deleteScript","console","warn","setScript","getElementById","createUrl","script","createElement","src","onerror","loadErrorCallback","bind","onload","defer","async","head","appendChild","source","lineno","colno","delay","log","setTimeout","join","remove","forEach","cb","a","b","i","KakaoMapContext","React","createContext","Map","forwardRef","ref","style","children","center","isPanto","padding","className","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onBoundsChanged","onCenterChanged","onClick","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","onZoomStart","onCreate","setIsLoaded","useState","map","setMap","container","useRef","then","MapContainer","current","initalMapCenter","LatLng","lat","lng","Coords","x","y","kakaoMap","useImperativeHandle","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","Provider","value","useMap","componentName","useContext","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","infoWindow","useMemo","kakaoInfoWindow","content","display","open","close","setPosition","setAltitude","setRange","setZIndex","parentElement","ReactDom","createPortal","KakaoMapMarkerClustererContext","MarkerClusterer","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","styles","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","Marker","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","title","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","Size","size","width","height","alt","_image$options","coords","_image$options2","offset","Point","_image$options4","_image$options5","shape","_image$options6","spriteOrigin","_image$options8","_image$options9","spriteSize","_image$options11","_image$options12","markerPosition","MapInfoWindow","infoPosition","CustomOverlayMap","xAnchor","yAnchor","overlayPosition","overlay","KakaoCustomOverlay","CustomOverlay","ReactDOM","MapTypeControl","ControlPosition","TOPRIGHT","mapTypeControl","addControl","removeControl","ZoomControl","RIGHT","MapTypeId","addOverlayMapTypeId","removeOverlayMapTypeId","Circle","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","setRadius","setOptions","Polyline","path","endArrow","polyLinePath","every","v","Array","p","polyline","setPath","Polygon","polygonPath","polygon","Rectangle","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","setBounds","Ellipse","rx","ry","ellipseCenter","ellipse","AbstractOverlay","draw","onAdd","onRemove","reactAbstractOverlay","ReactAbstractOveraly","super","KakaoRoadviewContext","Roadview","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","onErrorGetNearestPanoId","isLoading","setIsLoading","roadview","setRoadview","kakaoRoadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","useRoadview","CustomOverlayRoadview","Viewpoint","RoadviewMarker","RoadviewInfoWindow","DrawingManagerContext","useDrawingManagerEvent","DrawingManager","arrowOptions","circleOptions","ellipseOptions","markerOptions","polygonOptions","polylineOptions","rectangleOptions","drawingMode","guideTooltip","onSelect","onDrawstart","onDraw","onDrawend","onDrawnext","onCancle","onStateChanged","drawingManager","drawing","Toolbox","TOP","drawingmanager","toolbox","element","getElement","StaticMap","mapContainer","_marker","isArray","mk","kakaoStaticMap","useInjectKakaoMapApi","state","setState","loader","catch"],"sources":["C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\hooks\\useIsomorphicLayoutEffect.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\hooks\\useKakaoEvent.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\util\\kakaoMapApiLoader.ts","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Map.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\hooks\\useMap.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\InfoWindow.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\MarkerClusterer.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Marker.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\MapMarker.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\MapInfoWindow.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\CustomOverlayMap.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\MapTypeControl.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\ZoomControl.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\MapTypeId.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Circle.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Polyline.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Polygon.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Rectangle.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Ellipse.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\AbstractOverlay.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Roadview.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\hooks\\useRoadview.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\CustomOverlayRoadview.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\RoadviewMarker.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\RoadviewInfoWindow.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\DrawingManager.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\Toolbox.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\components\\StaticMap.tsx","C:\\Users\\kimso\\Desktop\\latest_FE\\latest_FE\\node_modules\\react-kakao-maps-sdk\\src\\hooks\\useInjectKakaoMapApi.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from \"react\"\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" && typeof document !== \"undefined\"\n    ? useLayoutEffect\n    : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useIsomorphicLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","export type Libraries = (\"services\" | \"clusterer\" | \"drawing\")[]\n\nexport interface LoaderOptions {\n  /**\n   * script 객체 생성시 사용자 정의 id\n   */\n  id?: string\n  /**\n   * 발급 받은 Kakao 지도 Javscript API 키.\n   *\n   * @see [준비하기](https://apis.map.kakao.com/web/guide/#ready)\n   */\n  appkey: string\n  /**\n   * 사용하는 라이브러리 목록\n   *\n   * Kakao 지도 Javascript API 는 지도와 함께 사용할 수 있는 라이브러리 를 지원하고 있습니다.\n   * 라이브러리는 javascript API와 관련되어 있지만 조금 특화된 기능을 묶어둔 것을 말합니다. 이 기능은 추가로 불러와서 사용할 수 있도록 되어있습니다.\n   * 현재 사용할 수 있는 라이브러리는 다음과 같습니다.\n   *\n   * clusterer: 마커를 클러스터링 할 수 있는 클러스터러 라이브러리 입니다.\n   * services: 장소 검색 과 주소-좌표 변환 을 할 수 있는 services 라이브러리 입니다.\n   * drawing: 지도 위에 마커와 그래픽스 객체를 쉽게 그릴 수 있게 그리기 모드를 지원하는 drawing 라이브러리 입니다.\n   * 라이브러리는 계속해서 추가될 예정입니다.\n   */\n  libraries?: Libraries\n  /**\n   * 사용자 정의 Kakao 지도 javascript 경로 지정\n   *\n   * @default \"//dapi.kakao.com/v2/maps/sdk.js\"\n   */\n  url?: string\n  /**\n   * 보안을 위한 nonce 값 설정\n   */\n  nonce?: string\n  /**\n   * 스크립트 로드 재시도 횟수\n   */\n  retries?: number\n}\n\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\nconst DEFAULT_ID = \"__reactKakaoMapsSdkloaderId\"\n\n/**\n * Kakao Map Api Loader\n *\n * `new Loader(options).load()` 함수를 이용하여 Api를 비동기적으로 삽입할 수 있습니다.\n *\n * 해당 Loader를 이용시 `react-kakao-maps-sdk` 내부에서 injection 되는 이벤트를 감지하여 kakao map api 로딩 이후에 렌더링을 진행합니다.\n */\nexport class Loader {\n  private static instance: Loader\n  private static loadcheckcallbacks: ((e?: ErrorEvent) => void)[] = []\n\n  public readonly id: string\n  public readonly appkey: string\n  public readonly url: string\n  public readonly libraries: Libraries\n  public readonly nonce: string | undefined\n  public readonly retries: number\n\n  private callbacks: ((e?: ErrorEvent) => void)[] = []\n  private done = false\n  private loading = false\n  private errors: ErrorEvent[] = []\n  private onerrorEvent: ErrorEvent | undefined\n\n  constructor({\n    appkey,\n    id = DEFAULT_ID,\n    libraries = [],\n    nonce,\n    retries = 3,\n    url = \"//dapi.kakao.com/v2/maps/sdk.js\",\n  }: LoaderOptions) {\n    this.id = id\n    this.appkey = appkey\n    this.libraries = libraries\n    this.nonce = nonce\n    this.retries = retries\n    this.url = url\n\n    if (Loader.instance) {\n      if (!Loader.equalOptions(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        )\n      }\n\n      return Loader.instance\n    }\n    Loader.instance = this\n  }\n\n  public get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url,\n    }\n  }\n\n  public static isLoaded(): Promise<boolean> {\n    return new Promise((resolve) => {\n      if (window.kakao && window.kakao.maps) return resolve(true)\n\n      if (!Loader.instance)\n        return Loader.loadcheckcallbacks.push((e) => {\n          resolve(!e)\n        })\n\n      if (\n        Loader.instance.status === LoaderStatus.FAILURE ||\n        Loader.instance.status === LoaderStatus.INITIALIZED\n      ) {\n        return resolve(false)\n      }\n\n      if (Loader.instance.status === LoaderStatus.LOADING) {\n        Loader.loadcheckcallbacks.push((e) => resolve(!e))\n      }\n\n      return resolve(true)\n    })\n  }\n\n  public load(): Promise<typeof kakao> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err?: ErrorEvent) => {\n        if (!err) {\n          resolve(window.kakao)\n        } else {\n          reject(err.error)\n        }\n      })\n    })\n  }\n\n  public get status(): LoaderStatus {\n    if (this.onerrorEvent) {\n      return LoaderStatus.FAILURE\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING\n    }\n    return LoaderStatus.INITIALIZED\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1\n  }\n\n  private loadCallback(fn: (e?: ErrorEvent) => void): void {\n    this.callbacks.push(fn)\n    this.execute()\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset()\n    }\n  }\n\n  private reset(): void {\n    this.deleteScript()\n    this.done = false\n    this.loading = false\n    this.errors = []\n    this.onerrorEvent = undefined\n  }\n\n  private execute() {\n    this.resetIfRetryingFailed()\n\n    if (this.done) {\n      this.callback()\n    } else {\n      if (window.kakao && window.kakao.maps) {\n        console.warn(\n          \"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.\" +\n            \"설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"\n        )\n        this.callback()\n        return\n      }\n\n      if (!this.loading) {\n        this.loading = true\n        this.setScript()\n      }\n    }\n  }\n\n  private setScript() {\n    if (document.getElementById(this.id)) {\n      this.callback()\n    }\n\n    const url = this.createUrl()\n    const script = document.createElement(\"script\")\n\n    script.id = this.id\n    script.type = \"text/javascript\"\n    script.src = url\n    script.onerror = this.loadErrorCallback.bind(this)\n    script.onload = this.callback.bind(this)\n    script.defer = true\n    script.async = true\n\n    if (this.nonce) {\n      script.nonce = this.nonce\n    }\n\n    document.head.appendChild(script)\n  }\n\n  private loadErrorCallback(\n    event: Event | string,\n    source?: string,\n    lineno?: number,\n    colno?: number,\n    error?: Error\n  ): void {\n    this.errors.push({\n      event,\n      source,\n      // @ts-ignore\n      lineno,\n      // @ts-ignore\n      colno,\n      error,\n    })\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length\n\n      console.log(`Failed to load Kakao Maps script, retrying in ${delay} ms.`)\n\n      setTimeout(() => {\n        this.deleteScript()\n        this.setScript()\n      }, delay)\n    } else {\n      this.onerrorEvent = this.errors[this.errors.length - 1]\n      this.callback()\n    }\n  }\n\n  public createUrl(): string {\n    let url = this.url\n    url += `?appkey=${this.appkey}`\n\n    if (this.libraries.length) {\n      url += `&libraries=${this.libraries.join(\",\")}`\n    }\n\n    url += `&autoload=false`\n\n    return url\n  }\n\n  private deleteScript() {\n    const script = document.getElementById(this.id)\n    if (script) {\n      script.remove()\n    }\n  }\n\n  private callback() {\n    kakao.maps.load(() => {\n      this.done = true\n      this.loading = false\n\n      this.callbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      this.callbacks = []\n\n      Loader.loadcheckcallbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      Loader.loadcheckcallbacks = []\n    })\n  }\n\n  private static equalOptions(\n    a: typeof Loader.prototype.options,\n    b: typeof Loader.prototype.options\n  ): boolean {\n    if (a.appkey !== b.appkey) return false\n    if (a.id !== b.id) return false\n\n    if (a.libraries.length !== b.libraries.length) return false\n    for (let i = 0; i < a.libraries.length; ++i) {\n      if (a.libraries[i] !== b.libraries[i]) return false\n    }\n    if (a.nonce !== b.nonce) return false\n    if (a.retries !== b.retries) return false\n    if (a.url !== b.url) return false\n    return true\n  }\n}\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\n\nexport interface MapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n}\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 함께 인자로 전달 합니다.\n *\n * `ref`를 통해 `map` 객체에 직접 접근하여 사용 또는 onCreate 이벤트를 이용하여 접근이 가능합니다.\n *\n * > *주의 사항* `Map`, `RoadView` 컴포넌트에 한하여, ref 객체가 컴포넌트 마운트 시점에 바로 초기화가 안될 수 있습니다.\n * >\n * > 컴포넌트 마운트 시점에 `useEffect` 를 활용하여, 특정 로직을 수행하고 싶은 경우 `ref` 객체를 사용하는 것보다\n * > `onCreate` 이벤트와 `useState`를 함께 활용하여 제어하는 것을 추천 드립니다.\n */\nconst Map = React.forwardRef<kakao.maps.Map, React.PropsWithChildren<MapProps>>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-map-container\",\n      style,\n      children,\n      center,\n      isPanto = false,\n      padding = 32,\n      className,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      draggable,\n      zoomable,\n      keyboardShortcuts,\n      level,\n      maxLevel,\n      minLevel,\n      mapTypeId,\n      projectionId,\n      scrollwheel,\n      tileAnimation,\n      onBoundsChanged,\n      onCenterChanged,\n      onClick,\n      onDoubleClick,\n      onDrag,\n      onDragEnd,\n      onDragStart,\n      onIdle,\n      onMaptypeidChanged,\n      onMouseMove,\n      onRightClick,\n      onTileLoaded,\n      onZoomChanged,\n      onZoomStart,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [map, setMap] = useState<kakao.maps.Map>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const MapContainer = container.current\n\n      if (!MapContainer) {\n        return\n      }\n\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      const kakaoMap = new kakao.maps.Map(MapContainer, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n    }, [\n      isLoaded,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      mapTypeId,\n      tileAnimation,\n    ])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !onCreate) return\n      onCreate(map)\n    }, [map, onCreate])\n\n    // center position 변경시 map center 변경\n    useIsomorphicLayoutEffect(() => {\n      if (!map) return\n\n      let prevCenter = map.getCenter()\n      if (prevCenter instanceof kakao.maps.Coords) {\n        prevCenter = prevCenter.toLatLng()\n      }\n\n      const centerPosition =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      if (\n        (centerPosition instanceof kakao.maps.LatLng &&\n          centerPosition.equals(prevCenter)) ||\n        (centerPosition instanceof kakao.maps.Coords &&\n          centerPosition.toLatLng().equals(prevCenter))\n      ) {\n        return\n      }\n\n      if (isPanto) {\n        map.panTo(centerPosition, padding)\n      } else {\n        map.setCenter(centerPosition)\n      }\n      // @ts-ignore\n    }, [map, center.lat, center.lng, center.x, center.y])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof draggable === \"undefined\") return\n      map.setDraggable(draggable)\n    }, [map, draggable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof zoomable === \"undefined\") return\n      map.setZoomable(zoomable)\n    }, [map, zoomable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n        return\n      map.setKeyboardShortcuts(keyboardShortcuts)\n    }, [map, keyboardShortcuts])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !level) return\n      map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !mapTypeId) return\n      map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !projectionId) return\n      map.setProjectionId(projectionId)\n    }, [map, projectionId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !maxLevel) return\n      map.setMaxLevel(maxLevel)\n    }, [map, maxLevel])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !minLevel) return\n      map.setMinLevel(minLevel)\n    }, [map, minLevel])\n\n    useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n    useKakaoEvent(map, \"center_changed\", onCenterChanged)\n    useKakaoEvent(map, \"click\", onClick)\n    useKakaoEvent(map, \"dblclick\", onDoubleClick)\n    useKakaoEvent(map, \"drag\", onDrag)\n    useKakaoEvent(map, \"dragstart\", onDragStart)\n    useKakaoEvent(map, \"dragend\", onDragEnd)\n    useKakaoEvent(map, \"idle\", onIdle)\n    useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n    useKakaoEvent(map, \"mousemove\", onMouseMove)\n    useKakaoEvent(map, \"rightclick\", onRightClick)\n    useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n    useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n    useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n    return (\n      <>\n        <div id={id} style={style} className={className} ref={container}></div>\n        {map && (\n          <KakaoMapContext.Provider value={map}>\n            {children}\n          </KakaoMapContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, {\n  useLayoutEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<InfoWindowProps>\n>(\n  (\n    {\n      map,\n      position,\n      marker,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const container = useRef(document.createElement(\"div\"))\n\n    const infoWindow = useMemo(() => {\n      const kakaoInfoWindow = new kakao.maps.InfoWindow({\n        altitude: altitude,\n        disableAutoPan: disableAutoPan,\n        range: range,\n        removable: removable,\n        zIndex: zIndex,\n        content: container.current,\n        position: position,\n      })\n      container.current.style.display = \"none\"\n      return kakaoInfoWindow\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disableAutoPan, removable])\n\n    useImperativeHandle(ref, () => infoWindow, [infoWindow])\n\n    useLayoutEffect(() => {\n      infoWindow.open(map, marker)\n      return () => {\n        infoWindow.close()\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(infoWindow)\n    }, [infoWindow, onCreate])\n\n    useLayoutEffect(() => {\n      if (!infoWindow) return\n      infoWindow.setPosition(position)\n    }, [infoWindow, position])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !altitude) return\n      infoWindow.setAltitude(altitude)\n    }, [infoWindow, altitude])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !range) return\n      infoWindow.setRange(range)\n    }, [infoWindow, range])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !zIndex) return\n      infoWindow.setZIndex(zIndex)\n    }, [infoWindow, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDom.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default InfoWindow\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer = React.forwardRef<\n  kakao.maps.MarkerClusterer,\n  React.PropsWithChildren<MarkerClustererProps>\n>(\n  (\n    {\n      children,\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n      onClusterclick,\n      onClusterdblclick,\n      onClustered,\n      onClusterout,\n      onClusterover,\n      onClusterrightclick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`MarkerClusterer`)\n    const markerCluster = useMemo(() => {\n      if (!window.kakao.maps.MarkerClusterer) {\n        console.warn(\n          \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n      return new kakao.maps.MarkerClusterer({\n        averageCenter,\n        calculator,\n        clickable,\n        disableClickZoom,\n        gridSize,\n        hoverable,\n        minClusterSize,\n        minLevel,\n        styles,\n        texts,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => markerCluster!, [markerCluster])\n\n    useLayoutEffect(() => {\n      markerCluster?.setMap(map)\n    }, [map, markerCluster])\n\n    useLayoutEffect(() => {\n      if (markerCluster && onCreate) onCreate(markerCluster)\n    }, [markerCluster, onCreate])\n\n    useLayoutEffect(() => {\n      if (markerCluster && gridSize) {\n        markerCluster.setGridSize(gridSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, gridSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minClusterSize) {\n        markerCluster.setMinClusterSize(minClusterSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minClusterSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && typeof averageCenter !== \"undefined\") {\n        markerCluster.setAverageCenter(averageCenter)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, averageCenter])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minLevel) {\n        markerCluster.setMinLevel(minLevel)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minLevel])\n\n    useLayoutEffect(() => {\n      if (markerCluster && texts) {\n        markerCluster.setTexts(texts)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, texts])\n\n    useLayoutEffect(() => {\n      if (markerCluster && calculator) {\n        markerCluster.setCalculator(calculator)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, calculator])\n\n    useLayoutEffect(() => {\n      if (markerCluster && styles) {\n        markerCluster.setStyles(styles)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, styles])\n\n    useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n    useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n    useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n    useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n    useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n    useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n    if (!markerCluster) {\n      return null\n    }\n\n    return (\n      <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n        {children}\n      </KakaoMapMarkerClustererContext.Provider>\n    )\n  }\n)\n\nexport default MarkerClusterer\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MarkerProps>\n>(\n  (\n    {\n      map,\n      position,\n      children,\n      altitude,\n      clickable,\n      draggable,\n      image,\n      infoWindowOptions,\n      onCreate,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    // Marker 객체는 단 한번만 생성 되도록 함\n    const marker = useMemo(() => {\n      const kakaoMarker = new kakao.maps.Marker({\n        altitude,\n        clickable,\n        draggable,\n        image,\n        opacity,\n        range,\n        title,\n        zIndex,\n        position,\n      })\n\n      return kakaoMarker\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => marker, [marker])\n\n    useLayoutEffect(() => {\n      if (markerCluster) {\n        markerCluster.addMarker(marker)\n      } else {\n        marker.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(marker)\n        } else {\n          marker.setMap(null)\n        }\n      }\n    }, [map, markerCluster, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(marker)\n    }, [marker, onCreate])\n\n    useKakaoEvent(marker, \"click\", onClick)\n    useKakaoEvent(marker, \"dragstart\", onDragStart)\n    useKakaoEvent(marker, \"dragend\", onDragEnd)\n    useKakaoEvent(marker, \"mouseout\", onMouseOut)\n    useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n    // position이 변경되면 객체를 갱신한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !position) return\n\n      marker.setPosition(position)\n    }, [map, marker, position])\n\n    // image 객체가 존재하면 이미지를 로드한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !image) return\n\n      marker.setImage(image)\n    }, [map, marker, image])\n\n    // altitude 값이 있으면 높이를 조정한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !altitude) return\n\n      marker.setAltitude(altitude)\n    }, [map, marker, altitude])\n\n    // clickable 값이 있으면 클릭이 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof clickable === \"undefined\") return\n\n      marker.setClickable(clickable)\n    }, [map, marker, clickable])\n\n    // draggable 값이 있으면 드래그가 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof draggable === \"undefined\") return\n\n      marker.setDraggable(draggable)\n    }, [map, marker, draggable])\n\n    // opacity 값이 있으면 투명도를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !opacity) return\n\n      marker.setOpacity(opacity)\n    }, [map, marker, opacity])\n\n    // range 값이 있으면 마커의 가시반경을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !range) return\n\n      marker.setRange(range)\n    }, [map, marker, range])\n\n    // title 값이 있으면 마커의 제목을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !title) return\n\n      marker.setTitle(title)\n    }, [map, marker, title])\n\n    // zIndex 값이 있으면 마커의 zindex를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !zIndex) return\n\n      marker.setZIndex(zIndex)\n    }, [map, marker, zIndex])\n\n    if (children)\n      return (\n        <InfoWindow\n          position={position}\n          map={map}\n          marker={marker}\n          altitude={infoWindowOptions?.altitude}\n          disableAutoPan={infoWindowOptions?.disableAutoPan}\n          range={infoWindowOptions?.range}\n          removable={infoWindowOptions?.removable}\n          zIndex={infoWindowOptions?.zIndex}\n        >\n          {children}\n        </InfoWindow>\n      )\n\n    return null\n  }\n)\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MapMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      clickable,\n      draggable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`MapMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n      // @ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [position.lat, position.lng, position.x, position.y])\n\n    return (\n      <Marker\n        map={map}\n        position={markerPosition}\n        image={markerImage}\n        clickable={clickable}\n        draggable={draggable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default MapMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<MapInfoWindowProps>\n>(\n  (\n    { position, children, disableAutoPan, removable, zIndex, onCreate },\n    ref\n  ) => {\n    const map = useMap(`MapInfoWindow`)\n    const infoPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    return (\n      <InfoWindow\n        disableAutoPan={disableAutoPan}\n        removable={removable}\n        zIndex={zIndex}\n        map={map}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default MapInfoWindow\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayMapProps>\n>(\n  (\n    { position, children, clickable, xAnchor, yAnchor, zIndex, onCreate },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    const map = useMap(`CustomOverlayMap`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!map) return\n\n      if (markerCluster) {\n        markerCluster.addMarker(overlay)\n      } else {\n        overlay.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(overlay)\n        } else {\n          overlay.setMap(null)\n        }\n      }\n    }, [map, markerCluster, overlay])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayMap\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = React.forwardRef<\n  kakao.maps.MapTypeControl,\n  MapTypeControlProps\n>(({ position = kakao.maps.ControlPosition.TOPRIGHT }, ref) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl])\n\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n  }, [map, mapTypeControl, position])\n\n  return null\n})\n\nexport default MapTypeControl\n","import React, { useEffect, useImperativeHandle, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl = React.forwardRef<kakao.maps.ZoomControl, ZoomControlProps>(\n  ({ position = kakao.maps.ControlPosition.RIGHT }, ref) => {\n    const map = useMap(`ZoomControl`)\n\n    const ZoomControl = useMemo(() => {\n      return new kakao.maps.ZoomControl()\n    }, [])\n\n    useImperativeHandle(ref, () => ZoomControl, [ZoomControl])\n\n    useEffect(() => {\n      map.addControl(ZoomControl, position)\n\n      return () => {\n        map.removeControl(ZoomControl)\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, position])\n\n    return null\n  }\n)\n\nexport default ZoomControl\n","import React, { useEffect } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeIdProps {\n  /**\n   * MapTypeId를 정의 한다.\n   */\n  type: kakao.maps.MapTypeId\n}\n\n/**\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\n */\nconst MapTypeId: React.FC<MapTypeIdProps> = ({ type }) => {\n  const map = useMap(`MapTypeId`)\n\n  useEffect(() => {\n    map.addOverlayMapTypeId(type)\n\n    return () => {\n      map.removeOverlayMapTypeId(type)\n    }\n  }, [map, type])\n\n  return null\n}\n\nexport default MapTypeId\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle = React.forwardRef<kakao.maps.Circle, CircleProps>(\n  (\n    {\n      center,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Circle`)\n\n    const circleCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const circle = useMemo(() => {\n      return new kakao.maps.Circle({\n        center: circleCenter,\n        radius,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => circle, [circle])\n\n    useLayoutEffect(() => {\n      circle.setMap(map)\n      return () => {\n        circle.setMap(null)\n      }\n    }, [map, circle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(circle)\n    }, [circle, onCreate])\n\n    useLayoutEffect(() => {\n      if (circle) circle.setPosition(circleCenter)\n    }, [circle, circleCenter])\n\n    useLayoutEffect(() => {\n      circle.setRadius(radius)\n    }, [circle, radius])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      circle.setZIndex(zIndex)\n    }, [circle, zIndex])\n\n    useLayoutEffect(() => {\n      circle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      circle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(circle, \"mouseover\", onMouseover)\n    useKakaoEvent(circle, \"mouseout\", onMouseout)\n    useKakaoEvent(circle, \"mousemove\", onMousemove)\n    useKakaoEvent(circle, \"mousedown\", onMousedown)\n    useKakaoEvent(circle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Circle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline = React.forwardRef<kakao.maps.Polyline, PolylineProps>(\n  (\n    {\n      path,\n      endArrow,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polyline`)\n\n    const polyLinePath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polyline = useMemo(() => {\n      return new kakao.maps.Polyline({\n        path: polyLinePath,\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polyline, [polyline])\n\n    useLayoutEffect(() => {\n      polyline.setMap(map)\n      return () => polyline.setMap(null)\n    }, [map, polyline])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polyline)\n    }, [polyline, onCreate])\n\n    useLayoutEffect(() => {\n      polyline.setOptions({\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polyline,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polyline.setPath(polyLinePath)\n    }, [polyline, polyLinePath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polyline.setZIndex(zIndex)\n    }, [polyline, zIndex])\n\n    useKakaoEvent(polyline, \"mouseover\", onMouseover)\n    useKakaoEvent(polyline, \"mouseout\", onMouseout)\n    useKakaoEvent(polyline, \"mousemove\", onMousemove)\n    useKakaoEvent(polyline, \"mousedown\", onMousedown)\n    useKakaoEvent(polyline, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polyline\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon = React.forwardRef<kakao.maps.Polygon, PolygonProps>(\n  (\n    {\n      path,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polygon`)\n\n    const polygonPath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polygon = useMemo(() => {\n      return new kakao.maps.Polygon({\n        path: polygonPath,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polygon, [polygon])\n\n    useLayoutEffect(() => {\n      polygon.setMap(map)\n      return () => polygon.setMap(null)\n    }, [map, polygon])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polygon)\n    }, [polygon, onCreate])\n\n    useLayoutEffect(() => {\n      polygon.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polygon,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polygon.setPath(polygonPath)\n    }, [polygon, polygonPath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polygon.setZIndex(zIndex)\n    }, [polygon, zIndex])\n\n    useKakaoEvent(polygon, \"mouseover\", onMouseover)\n    useKakaoEvent(polygon, \"mouseout\", onMouseout)\n    useKakaoEvent(polygon, \"mousemove\", onMousemove)\n    useKakaoEvent(polygon, \"mousedown\", onMousedown)\n    useKakaoEvent(polygon, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polygon\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle = React.forwardRef<kakao.maps.Rectangle, RectangleProps>(\n  (\n    {\n      bounds,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Rectangle`)\n\n    const rectangleBounds = useMemo(() => {\n      return new kakao.maps.LatLngBounds(\n        new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n        new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n      )\n    }, [bounds])\n\n    const rectangle = useMemo(() => {\n      return new kakao.maps.Rectangle({\n        bounds: rectangleBounds,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => rectangle, [rectangle])\n\n    useLayoutEffect(() => {\n      rectangle.setMap(map)\n      return () => rectangle.setMap(null)\n    }, [map, rectangle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(rectangle)\n    }, [rectangle, onCreate])\n\n    useLayoutEffect(() => {\n      rectangle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      rectangle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      rectangle.setBounds(rectangleBounds)\n    }, [rectangle, rectangleBounds])\n\n    useLayoutEffect(() => {\n      if (zIndex) rectangle.setZIndex(zIndex)\n    }, [rectangle, zIndex])\n\n    useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n    useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n    useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n    useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n    useKakaoEvent(rectangle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Rectangle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = React.forwardRef<kakao.maps.Ellipse, EllipseProps>(\n  (\n    {\n      center,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Ellipse`)\n\n    const ellipseCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const ellipse = useMemo(() => {\n      return new kakao.maps.Ellipse({\n        center: ellipseCenter,\n        rx,\n        ry,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => ellipse, [ellipse])\n\n    useLayoutEffect(() => {\n      ellipse.setMap(map)\n\n      return () => {\n        ellipse.setMap(null)\n      }\n    }, [map, ellipse])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(ellipse)\n    }, [ellipse, onCreate])\n\n    useLayoutEffect(() => {\n      if (ellipse) ellipse.setPosition(ellipseCenter)\n    }, [ellipse, ellipseCenter])\n\n    useLayoutEffect(() => {\n      ellipse.setRadius(rx, ry)\n    }, [ellipse, rx, ry])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      ellipse.setZIndex(zIndex)\n    }, [ellipse, zIndex])\n\n    useLayoutEffect(() => {\n      ellipse.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      ellipse,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n    useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n    useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n    useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n    useKakaoEvent(ellipse, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Ellipse\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay = React.forwardRef<\n  kakao.maps.AbstractOverlay,\n  AbstractOverlayProps\n>(({ draw, onAdd, onRemove, onCreate }, ref) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useImperativeHandle(ref, () => reactAbstractOverlay, [reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n\n  return null\n})\n\nexport default AbstractOverlay\n","import React, { useImperativeHandle, useRef, useState } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * roadviewContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * roadviewContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * roadviewContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview = React.forwardRef<\n  kakao.maps.Roadview,\n  React.PropsWithChildren<RoadviewProps>\n>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-roadview-container\",\n      style,\n      children,\n      position,\n      className,\n      pan,\n      panoId,\n      panoX,\n      panoY,\n      tilt,\n      zoom,\n      onCreate,\n      onInit,\n      onPanoidChange,\n      onPositionChanged,\n      onViewpointChange,\n      onErrorGetNearestPanoId,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n      if (!container.current) return\n\n      const kakaoRoadview = new kakao.maps.Roadview(container.current, {\n        pan: pan,\n        panoId: panoId,\n        panoX: panoX,\n        panoY: panoY,\n        tilt: tilt,\n        zoom: zoom,\n      })\n\n      setRoadview(kakaoRoadview)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLoaded, panoX, panoY, zoom])\n\n    useImperativeHandle(ref, () => roadview!, [roadview])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview || !onCreate) return\n      onCreate(roadview)\n    }, [roadview, onCreate])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        panoId ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n      new kakao.maps.RoadviewClient().getNearestPanoId(\n        newPostion,\n        position.radius,\n        (panoId) => {\n          if (panoId === null && onErrorGetNearestPanoId) {\n            onErrorGetNearestPanoId(roadview)\n          } else {\n            roadview.setPanoId(panoId, newPostion)\n          }\n        }\n      )\n    }, [\n      roadview,\n      panoId,\n      position.lat,\n      position.lng,\n      position.radius,\n      onErrorGetNearestPanoId,\n    ])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        !panoId ||\n        panoId === roadview.getPanoId() ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n      roadview.setPanoId(panoId, newPostion)\n    }, [roadview, panoId, position.lat, position.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview) return\n\n      const prevViewpoint = roadview.getViewpoint()\n\n      if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n      if (pan) prevViewpoint.pan = pan\n      if (tilt) prevViewpoint.tilt = tilt\n      roadview.setViewpoint(prevViewpoint)\n    }, [roadview, pan, tilt])\n\n    useKakaoEvent(roadview, \"init\", (target) => {\n      setIsLoading(false)\n      if (onInit) onInit(target)\n    })\n    useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n    useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n    useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n    return (\n      <>\n        <div id={id} className={className} style={style} ref={container}></div>\n        {roadview && !isLoading && (\n          <KakaoRoadviewContext.Provider value={roadview}>\n            {children}\n          </KakaoRoadviewContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Roadview\n","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, {\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayRoadviewProps>\n>(\n  (\n    {\n      position,\n      children,\n      clickable,\n      xAnchor,\n      yAnchor,\n      zIndex,\n      altitude,\n      range,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`CustomOverlayRoadview`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!roadview) return\n\n      overlay.setMap(roadview)\n\n      return () => {\n        overlay.setMap(null)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [overlay, roadview])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    useLayoutEffect(() => {\n      if (!altitude) return\n      overlay.setAltitude(altitude)\n    }, [overlay, altitude])\n\n    useLayoutEffect(() => {\n      if (!range) return\n      overlay.setRange(range)\n    }, [overlay, range])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<RoadviewMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      altitude,\n      clickable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      if (\"x\" in position) {\n        return new kakao.maps.Coords(position.x, position.y).toLatLng()\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.x,\n      // @ts-ignore\n      position.y,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position?.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <Marker\n        map={roadview}\n        position={markerPosition}\n        image={markerImage}\n        altitude={altitude}\n        clickable={clickable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        range={range}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<RoadviewInfoWindowProps>\n>(\n  (\n    {\n      position,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewInfoWindow`)\n    const infoPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <InfoWindow\n        altitude={altitude}\n        disableAutoPan={disableAutoPan}\n        range={range}\n        removable={removable}\n        zIndex={zIndex}\n        map={roadview}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default RoadviewInfoWindow\n","import React, {\n  ReactNode,\n  Ref,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport const DrawingManagerContext =\n  React.createContext<kakao.maps.drawing.DrawingManager>(\n    undefined as unknown as kakao.maps.drawing.DrawingManager\n  )\n\nexport type DrawingManagerProps<\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n> = Partial<kakao.maps.drawing.OverlayOptions> &\n  Pick<kakao.maps.drawing.OverlayOptions, `${T}Options`> & {\n    /**\n     * 마우스 오버 시 가이드 툴팁 표시 여부. ‘draw’, ‘drag’, ‘edit’ 3가지를 지정할 수 있다 (기본값: 모두 표시 안함)\n     * 예를들어 [‘draw’]로 설정하면 객체를 그릴때 가이드 툴팁이 표시된다\n     */\n    guideTooltip?: Array<\"draw\" | \"drag\" | \"edit\">\n    /**\n     * 사용할 그리기 요소 지정한다 (기본값: 모든 그리기 요소)\n     */\n    drawingMode?: Array<T>\n\n    /**\n     * 그리기 요소를 선택하면 발생한다.\n     */\n    onSelect?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawstart?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 시작 후, 마우스를 이동하면 발생한다.\n     */\n    onDraw?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawend?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 다음 단계 그리기를 하면 발생한다. (Polyline, Polygon, Arrow 한정)\n     */\n    onDrawnext?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 취소하면 발생한다.\n     */\n    onCancle?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소를 삭제하면 발생한다.\n     */\n    onRemove?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소들의 상태가 변경되면 발생한다.\n     * 각 요소의 생성/수정/이동/삭제 동작과 undo 또는 redo 함수 호출이 이에 해당한다.\n     */\n    onStateChanged?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>\n    ) => void\n\n    /**\n     * 객체 생성후 해당 이벤트가 발생합니다.\n     */\n    onCreate?: (drawingManager: kakao.maps.drawing.DrawingManager<T>) => void\n\n    /**\n     * Toolbox에 대해서 추가할 때 사용합니다.\n     */\n    children?: ReactNode\n  }\n\nfunction useDrawingManagerEvent<T extends kakao.maps.drawing.OverlayType>(\n  target: kakao.maps.drawing.DrawingManager<T> | undefined,\n  type:\n    | \"drawstart\"\n    | \"draw\"\n    | \"drawend\"\n    | \"drawnext\"\n    | \"select\"\n    | \"cancel\"\n    | \"remove\"\n    | \"state_changed\",\n  callback:\n    | ((target: kakao.maps.drawing.DrawingManager<T>, ...args: any) => void)\n    | undefined\n) {\n  useLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    // @ts-ignore\n    target.addListener(type, wrapCallback)\n  }, [callback, target, type])\n}\n\n/**\n * 그리기 관리자 객체를 생성하는 컴포넌트 입니다.\n *\n * 초기 생성자에 필요한 Props는 최초 렌더링에만 반영을 하고 이후에는 값이 변경되더라도 적용되지 않습니다.\n *\n * > `on~` 시리즈를 제외한 props는 초기 렌더링 이후 작동 안함\n *\n * DrawingManager는 이전 Map, Marker, CustomOverlay와 달리 Props를 통해 제어를 하는 것이 아닌 직접 DrawingManager 객체를 이용하여 제어를 해야 합니다.\n *\n * 이를 위해 ref 객체를 통해 `DrawingManager` 객체를 접근 할 수 있으며, 이를 활용하여 여러 이벤트 처리 및 제어가 가능합니다.\n *\n * TypeScript 사용자를 위한 `Generic`이 적용되어 있으므로, `ref` 객체에 대한 typing 및 `drawingMode`에 대해 확실하게 정의해야 합니다.\n *\n * ```tsx\n * const Main = () => {\n *     const managerRef = useRef<kakao.maps.drawing.DrawingManager<\n *       kakao.maps.drawing.OverlayType.POLYLINE\n *     >>(null);\n *\n *     function selectOverlay(type: string) {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={(e) => {\n *           selectOverlay('POLYLINE')\n *         }}>선</button>\n *       </>\n *     )\n *   }\n * ```\n *\n * > JavaScript 코드 버전\n *\n * ```jsx live\n * function() {\n *   const Main = () => {\n *     const managerRef = useRef(null);\n *\n *     function selectOverlay() {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={selectOverlay}>선</button>\n *       </>\n *     )\n *   }\n *   return (<Main />)\n * }\n * ```\n */\nconst DrawingManager = React.forwardRef(function <\n  T extends kakao.maps.drawing.OverlayType\n>(\n  {\n    arrowOptions,\n    circleOptions,\n    ellipseOptions,\n    markerOptions,\n    polygonOptions,\n    polylineOptions,\n    rectangleOptions,\n    drawingMode,\n    guideTooltip,\n    onSelect,\n    onDrawstart,\n    onDraw,\n    onDrawend,\n    onDrawnext,\n    onCancle,\n    onRemove,\n    onStateChanged,\n    onCreate,\n    children,\n  }: DrawingManagerProps<T>,\n  ref: Ref<kakao.maps.drawing.DrawingManager<T>>\n) {\n  const map = useMap(\"Toolbox\")\n\n  const drawingManager = useMemo(\n    () => {\n      if (!window.kakao.maps.drawing) {\n        console.warn(\n          \"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n\n      // @ts-ignore\n      return new kakao.maps.drawing.DrawingManager({\n        map,\n        drawingMode,\n        guideTooltip,\n        arrowOptions,\n        circleOptions,\n        ellipseOptions,\n        markerOptions,\n        polygonOptions,\n        polylineOptions,\n        rectangleOptions,\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n  useImperativeHandle(ref, () => drawingManager!, [drawingManager])\n\n  useLayoutEffect(() => {\n    drawingManager && onCreate && onCreate(drawingManager)\n  }, [drawingManager, onCreate])\n\n  useDrawingManagerEvent(drawingManager, \"select\", onSelect)\n  useDrawingManagerEvent(drawingManager, \"drawstart\", onDrawstart)\n  useDrawingManagerEvent(drawingManager, \"draw\", onDraw)\n  useDrawingManagerEvent(drawingManager, \"drawend\", onDrawend)\n  useDrawingManagerEvent(drawingManager, \"drawnext\", onDrawnext)\n  useDrawingManagerEvent(drawingManager, \"cancel\", onCancle)\n  useDrawingManagerEvent(drawingManager, \"remove\", onRemove)\n  useDrawingManagerEvent(drawingManager, \"state_changed\", onStateChanged)\n\n  if (!drawingManager) return null\n\n  return (\n    <DrawingManagerContext.Provider value={drawingManager}>\n      {children}\n    </DrawingManagerContext.Provider>\n  )\n}) as unknown as <\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n>(\n  _props: DrawingManagerProps<T> &\n    React.RefAttributes<kakao.maps.drawing.DrawingManager<T>>\n) => null\n\nexport default DrawingManager\n","import React, {\n  Ref,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport { DrawingManagerContext } from \"./DrawingManager\"\n\nexport type ToolboxProps = {\n  /**\n   * Toolbox의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 그리기 툴박스를 생성합니다.\n *\n * 해당 컴포넌트는 반드시 `DrawingManager` 컴포넌트의 자식으로 존재해야 합니다.\n */\nconst Toolbox = React.forwardRef(function (\n  { position }: ToolboxProps,\n  ref: Ref<kakao.maps.drawing.Toolbox>\n) {\n  position = position || kakao.maps.ControlPosition.TOP\n\n  const map = useMap(\"Toolbox\")\n  const drawingmanager = useContext(DrawingManagerContext)\n\n  if (!drawingmanager) {\n    throw new Error(\"Toolbox must exist inside DrawingManager Component!`\")\n  }\n\n  const toolbox = useMemo(\n    () =>\n      new kakao.maps.drawing.Toolbox({\n        drawingManager: drawingmanager,\n      }),\n    [drawingmanager]\n  )\n  useImperativeHandle(ref, () => toolbox, [toolbox])\n\n  useLayoutEffect(() => {\n    const element = toolbox.getElement()\n    map.addControl(element, position!)\n    return () => {\n      map.removeControl(element)\n    }\n  }, [map, toolbox, position])\n\n  return null\n})\n\nexport default Toolbox\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\n\nexport interface StaticMapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n\n  /**\n   * 확대 수준\n   * @default 3\n   */\n  level?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 이미지 지도에 표시할 마커 또는 마커 배열\n   */\n  marker:\n    | boolean\n    | {\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position?: {\n          lat: number\n          lng: number\n        }\n      }\n    | Array<{\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position: {\n          lat: number\n          lng: number\n        }\n      }>\n  /**\n   * StaticMap 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.StaticMap) => void\n}\n\nconst StaticMap = React.forwardRef<kakao.maps.StaticMap, StaticMapProps>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-staticmap-container\",\n      style,\n      className,\n      center,\n      marker,\n      level,\n      mapTypeId,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [map, setMap] = useState<kakao.maps.StaticMap>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      if (!window.kakao) {\n        console.warn(\n          \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n        )\n        return\n      }\n\n      const mapContainer = container.current\n      if (!mapContainer) return\n\n      kakao.maps.load(() => {\n        const _marker = (() => {\n          if (Array.isArray(marker)) {\n            return marker.map((mk) => {\n              return {\n                ...mk,\n                position: new kakao.maps.LatLng(\n                  mk.position.lat,\n                  mk.position.lng\n                ),\n              }\n            })\n          }\n          if (typeof marker === \"object\") {\n            if (!!marker.position) {\n              return {\n                ...marker,\n                position: new kakao.maps.LatLng(\n                  marker.position.lat,\n                  marker.position.lng\n                ),\n              }\n            }\n            return marker as { text: string }\n          }\n          return marker\n        })()\n        const kakaoStaticMap = new kakao.maps.StaticMap(mapContainer, {\n          center: new kakao.maps.LatLng(center.lat, center.lng),\n          level,\n          mapTypeId,\n          marker: _marker,\n        })\n\n        setMap(kakaoStaticMap)\n      })\n    }, [JSON.stringify(marker)])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map) map.setCenter(new kakao.maps.LatLng(center.lat, center.lng))\n    }, [map, center.lat, center.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && level) map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && mapTypeId) map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && onCreate) onCreate(map)\n    }, [map, onCreate])\n\n    return (\n      <div id={id} style={style} className={className} ref={container}></div>\n    )\n  }\n)\n\nexport default StaticMap\n","import { useEffect, useMemo, useState } from \"react\"\nimport { Loader, LoaderOptions } from \"../util/kakaoMapApiLoader\"\n\n/**\n * Kakao Map Api를 injection 합니다.\n *\n * 해당 hook은 cleanup 시점에도 Kakao Map Api를 제거 하지 않고, 동일한 hook를 여러 위치에서 호출 하더라도 최초 한번만 injection 됩니다.\n */\nconst useInjectKakaoMapApi = (options: LoaderOptions) => {\n  const [state, setState] = useState<{\n    loading: boolean\n    error: ErrorEvent | undefined\n  }>({\n    loading: true,\n    error: undefined,\n  })\n\n  const loader = useMemo(\n    () => new Loader(options),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(options)]\n  )\n\n  useEffect(() => {\n    loader\n      .load()\n      .then(() =>\n        setState({\n          loading: false,\n          error: undefined,\n        })\n      )\n      .catch((error) =>\n        setState({\n          loading: false,\n          error: error,\n        })\n      )\n  }, [loader])\n\n  return state\n}\n\nexport default useInjectKakaoMapApi\n"]},"metadata":{},"sourceType":"module"}